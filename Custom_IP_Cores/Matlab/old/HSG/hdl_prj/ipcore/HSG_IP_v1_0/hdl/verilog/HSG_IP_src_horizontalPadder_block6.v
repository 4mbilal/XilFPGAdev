// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\HSG\HSG_IP_src_horizontalPadder_block6.v
// Created: 2018-10-21 17:43:00
// 
// Generated by MATLAB 9.3 and HDL Coder 3.11
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: HSG_IP_src_horizontalPadder_block6
// Source Path: HSG/HSG/Image Filter6/LineBuffer/horizontalPadder
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module HSG_IP_src_horizontalPadder_block6
          (clk,
           reset,
           enb,
           dataIn,
           horSEL,
           dataOut);


  input   clk;
  input   reset;
  input   enb;
  input   dataIn;  // ufix1
  input   [2:0] horSEL;  // ufix3
  output  dataOut;  // ufix1

  wire nullValue;  // ufix1
  wire paddingConstant;  // ufix1
  reg  [0:5] intdelay_reg;  // ufix1 [6]
  wire [0:5] intdelay_reg_next;  // ufix1 [6]
  wire dataStore;  // ufix1


  assign nullValue = 1'b0;



  assign paddingConstant = 1'b0;



  always @(posedge clk or posedge reset)
    begin : intdelay_process
      if (reset == 1'b1) begin
        intdelay_reg[0] <= 1'b0;
        intdelay_reg[1] <= 1'b0;
        intdelay_reg[2] <= 1'b0;
        intdelay_reg[3] <= 1'b0;
        intdelay_reg[4] <= 1'b0;
        intdelay_reg[5] <= 1'b0;
      end
      else begin
        if (enb) begin
          intdelay_reg[0] <= intdelay_reg_next[0];
          intdelay_reg[1] <= intdelay_reg_next[1];
          intdelay_reg[2] <= intdelay_reg_next[2];
          intdelay_reg[3] <= intdelay_reg_next[3];
          intdelay_reg[4] <= intdelay_reg_next[4];
          intdelay_reg[5] <= intdelay_reg_next[5];
        end
      end
    end

  assign dataStore = intdelay_reg[5];
  assign intdelay_reg_next[0] = dataIn;
  assign intdelay_reg_next[1] = intdelay_reg[0];
  assign intdelay_reg_next[2] = intdelay_reg[1];
  assign intdelay_reg_next[3] = intdelay_reg[2];
  assign intdelay_reg_next[4] = intdelay_reg[3];
  assign intdelay_reg_next[5] = intdelay_reg[4];



  assign dataOut = (horSEL == 3'b000 ? nullValue :
              (horSEL == 3'b001 ? paddingConstant :
              (horSEL == 3'b010 ? paddingConstant :
              (horSEL == 3'b011 ? dataStore :
              (horSEL == 3'b100 ? paddingConstant :
              (horSEL == 3'b101 ? paddingConstant :
              paddingConstant))))));



endmodule  // HSG_IP_src_horizontalPadder_block6

