// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CornerDetection\Harris_HW_ip_src_RGB2Bin.v
// Created: 2020-01-15 11:28:57
// 
// Generated by MATLAB 9.7 and HDL Coder 3.15
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Harris_HW_ip_src_RGB2Bin
// Source Path: CornerDetection/Harris_HW/HDL Corner Algorithm/RGB2Bin
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Harris_HW_ip_src_RGB2Bin
          (clk,
           reset,
           enb,
           pixelIn_0,
           pixelIn_1,
           pixelIn_2,
           ctrlIn_hStart,
           ctrlIn_hEnd,
           ctrlIn_vStart,
           ctrlIn_vEnd,
           ctrlIn_valid,
           SliceLevel,
           pixelOut,
           ctrlOut_hStart,
           ctrlOut_hEnd,
           ctrlOut_vStart,
           ctrlOut_vEnd,
           ctrlOut_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] pixelIn_0;  // uint8
  input   [7:0] pixelIn_1;  // uint8
  input   [7:0] pixelIn_2;  // uint8
  input   ctrlIn_hStart;
  input   ctrlIn_hEnd;
  input   ctrlIn_vStart;
  input   ctrlIn_vEnd;
  input   ctrlIn_valid;
  input   [7:0] SliceLevel;  // uint8
  output  [7:0] pixelOut;  // uint8
  output  ctrlOut_hStart;
  output  ctrlOut_hEnd;
  output  ctrlOut_vStart;
  output  ctrlOut_vEnd;
  output  ctrlOut_valid;


  wire [7:0] Color_Space_Converter_out1;  // uint8
  wire Color_Space_Converter_out2_hStart;
  wire Color_Space_Converter_out2_hEnd;
  wire Color_Space_Converter_out2_vStart;
  wire Color_Space_Converter_out2_vEnd;
  wire Color_Space_Converter_out2_valid;
  wire Relational_Operator_relop1;
  wire [7:0] Constant1_out1;  // uint8
  wire [7:0] Constant_out1;  // uint8
  wire [7:0] Switch_out1;  // uint8


  Harris_HW_ip_src_Color_Space_Converter u_Color_Space_Converter (.clk(clk),
                                                                  .reset(reset),
                                                                  .enb(enb),
                                                                  .in0_0(pixelIn_0),  // uint8
                                                                  .in0_1(pixelIn_1),  // uint8
                                                                  .in0_2(pixelIn_2),  // uint8
                                                                  .in1_hStart(ctrlIn_hStart),
                                                                  .in1_hEnd(ctrlIn_hEnd),
                                                                  .in1_vStart(ctrlIn_vStart),
                                                                  .in1_vEnd(ctrlIn_vEnd),
                                                                  .in1_valid(ctrlIn_valid),
                                                                  .out0(Color_Space_Converter_out1),  // uint8
                                                                  .out1_hStart(Color_Space_Converter_out2_hStart),
                                                                  .out1_hEnd(Color_Space_Converter_out2_hEnd),
                                                                  .out1_vStart(Color_Space_Converter_out2_vStart),
                                                                  .out1_vEnd(Color_Space_Converter_out2_vEnd),
                                                                  .out1_valid(Color_Space_Converter_out2_valid)
                                                                  );

  assign Relational_Operator_relop1 = Color_Space_Converter_out1 > SliceLevel;



  assign Constant1_out1 = 8'b00000000;



  assign Constant_out1 = 8'b11111111;



  assign Switch_out1 = (Relational_Operator_relop1 == 1'b0 ? Constant1_out1 :
              Constant_out1);



  assign pixelOut = Switch_out1;

  assign ctrlOut_hStart = Color_Space_Converter_out2_hStart;

  assign ctrlOut_hEnd = Color_Space_Converter_out2_hEnd;

  assign ctrlOut_vStart = Color_Space_Converter_out2_vStart;

  assign ctrlOut_vEnd = Color_Space_Converter_out2_vEnd;

  assign ctrlOut_valid = Color_Space_Converter_out2_valid;

endmodule  // Harris_HW_ip_src_RGB2Bin

