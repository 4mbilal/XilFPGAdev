// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\BilateralFilterIP\Bilateral_ip_src_Vertical_Padder.v
// Created: 2021-04-16 01:15:52
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Bilateral_ip_src_Vertical_Padder
// Source Path: BilateralFilterIP/BilateralFilter_HW/Bilateral Filter1/LineBuffer/Vertical Padder
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Bilateral_ip_src_Vertical_Padder
          (dataVectorIn_0,
           dataVectorIn_1,
           dataVectorIn_2,
           dataVectorIn_3,
           dataVectorIn_4,
           dataVectorIn_5,
           dataVectorIn_6,
           dataVectorIn_7,
           dataVectorIn_8,
           verPadCount,
           dataVectorOut_0,
           dataVectorOut_1,
           dataVectorOut_2,
           dataVectorOut_3,
           dataVectorOut_4,
           dataVectorOut_5,
           dataVectorOut_6,
           dataVectorOut_7,
           dataVectorOut_8);


  input   [7:0] dataVectorIn_0;  // uint8
  input   [7:0] dataVectorIn_1;  // uint8
  input   [7:0] dataVectorIn_2;  // uint8
  input   [7:0] dataVectorIn_3;  // uint8
  input   [7:0] dataVectorIn_4;  // uint8
  input   [7:0] dataVectorIn_5;  // uint8
  input   [7:0] dataVectorIn_6;  // uint8
  input   [7:0] dataVectorIn_7;  // uint8
  input   [7:0] dataVectorIn_8;  // uint8
  input   [9:0] verPadCount;  // ufix10
  output  [7:0] dataVectorOut_0;  // uint8
  output  [7:0] dataVectorOut_1;  // uint8
  output  [7:0] dataVectorOut_2;  // uint8
  output  [7:0] dataVectorOut_3;  // uint8
  output  [7:0] dataVectorOut_4;  // uint8
  output  [7:0] dataVectorOut_5;  // uint8
  output  [7:0] dataVectorOut_6;  // uint8
  output  [7:0] dataVectorOut_7;  // uint8
  output  [7:0] dataVectorOut_8;  // uint8


  wire verSEL1;
  wire verSEL2;
  wire verSEL3;
  wire verSEL4;
  wire [7:0] DataLineOut4;  // uint8
  wire [7:0] DataLineOut3;  // uint8
  wire [7:0] DataLineOut2;  // uint8
  wire [7:0] DataLineOut1;  // uint8
  wire verSEL6;
  wire [7:0] DataLineOut6;  // uint8
  wire verSEL7;
  wire [7:0] DataLineOut7;  // uint8
  wire verSEL8;
  wire [7:0] DataLineOut8;  // uint8
  wire verSEL9;
  wire [7:0] DataLineOut9;  // uint8


  assign verSEL1 = verPadCount > 10'b0000000100;



  assign verSEL2 = verPadCount > 10'b0000000101;



  assign verSEL3 = verPadCount > 10'b0000000110;



  assign verSEL4 = verPadCount > 10'b0000000111;



  assign DataLineOut4 = (verSEL4 == 1'b0 ? dataVectorIn_3 :
              dataVectorIn_4);



  assign DataLineOut3 = (verSEL3 == 1'b0 ? dataVectorIn_2 :
              DataLineOut4);



  assign DataLineOut2 = (verSEL2 == 1'b0 ? dataVectorIn_1 :
              DataLineOut3);



  assign DataLineOut1 = (verSEL1 == 1'b0 ? dataVectorIn_0 :
              DataLineOut2);



  assign dataVectorOut_0 = DataLineOut1;

  assign dataVectorOut_1 = DataLineOut2;

  assign dataVectorOut_2 = DataLineOut3;

  assign dataVectorOut_3 = DataLineOut4;

  assign dataVectorOut_4 = dataVectorIn_4;

  assign verSEL6 = verPadCount < 10'b0000000001;



  assign DataLineOut6 = (verSEL6 == 1'b0 ? dataVectorIn_5 :
              dataVectorIn_4);



  assign dataVectorOut_5 = DataLineOut6;

  assign verSEL7 = verPadCount < 10'b0000000010;



  assign DataLineOut7 = (verSEL7 == 1'b0 ? dataVectorIn_6 :
              DataLineOut6);



  assign dataVectorOut_6 = DataLineOut7;

  assign verSEL8 = verPadCount < 10'b0000000011;



  assign DataLineOut8 = (verSEL8 == 1'b0 ? dataVectorIn_7 :
              DataLineOut7);



  assign dataVectorOut_7 = DataLineOut8;

  assign verSEL9 = verPadCount < 10'b0000000100;



  assign DataLineOut9 = (verSEL9 == 1'b0 ? dataVectorIn_8 :
              DataLineOut8);



  assign dataVectorOut_8 = DataLineOut9;

endmodule  // Bilateral_ip_src_Vertical_Padder

