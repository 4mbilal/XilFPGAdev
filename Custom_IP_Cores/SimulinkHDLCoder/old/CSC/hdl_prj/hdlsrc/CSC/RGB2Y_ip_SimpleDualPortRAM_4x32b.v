// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CSC\RGB2Y_ip_SimpleDualPortRAM_4x32b.v
// Created: 2017-12-30 16:25:22
// 
// Generated by MATLAB 9.0 and HDL Coder 3.8
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: RGB2Y_ip_SimpleDualPortRAM_4x32b
// Source Path: RGB2Y_ip/RGB2Y_ip_axi4_stream_master/RGB2Y_ip_fifo_data/RGB2Y_ip_fifo_data_classic/RGB2Y_ip_fifo_data_classic_ram_4x32b/RGB2Y_ip_SimpleDualPortRAM_4x32b
// Hierarchy Level: 5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module RGB2Y_ip_SimpleDualPortRAM_4x32b
          (
           clk,
           enb,
           wr_din,
           wr_addr,
           wr_en,
           rd_addr,
           rd_dout
          );


  input   clk;
  input   enb;
  input   [31:0] wr_din;  // ufix32
  input   [1:0] wr_addr;  // ufix2
  input   wr_en;  // ufix1
  input   [1:0] rd_addr;  // ufix2
  output  [31:0] rd_dout;  // ufix32

  parameter addr_width = 2'd2;
  parameter data_width = 6'd32;

  reg  [data_width - 1:0] ram [2**addr_width - 1:0];
  reg  [data_width - 1:0] data_int;
  integer i;

  initial begin
    for (i=0; i<=2**addr_width - 1; i=i+1) begin
      ram[i] = 0;
    end
    data_int = 0;
  end


  always @(posedge clk)
    begin : RGB2Y_ip_SimpleDualPortRAM_4x32b_process
      if (enb == 1'b1) begin
        if (wr_en == 1'b1) begin
          ram[wr_addr] <= wr_din;
        end
        data_int <= ram[rd_addr];
      end
    end

  assign rd_dout = data_int;

endmodule  // RGB2Y_ip_SimpleDualPortRAM_4x32b

