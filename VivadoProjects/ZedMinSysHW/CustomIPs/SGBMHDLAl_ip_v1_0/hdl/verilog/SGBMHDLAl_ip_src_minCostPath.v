// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_minCostPath.v
// Created: 2021-04-19 19:46:09
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_minCostPath
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/DirectionalCost/TopToBottom/tbSubsystem/minCostPath
// Hierarchy Level: 5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_minCostPath
          (matchingCost,
           prevCost_d,
           prevCost_d_1,
           prevCost_d_1_1,
           minPrevCost,
           currCost);


  input   [4:0] matchingCost;  // ufix5
  input   signed [9:0] prevCost_d;  // sfix10
  input   signed [9:0] prevCost_d_1;  // sfix10
  input   signed [9:0] prevCost_d_1_1;  // sfix10
  input   signed [9:0] minPrevCost;  // sfix10
  output  signed [9:0] currCost;  // sfix10


  wire [4:0] Constant_out1;  // ufix5
  wire [7:0] Constant1_out1;  // uint8
  wire signed [16:0] Min_op_stage1;  // sfix17
  wire signed [10:0] Sum_add_temp;  // sfix11
  wire signed [10:0] Sum_1;  // sfix11
  wire signed [10:0] Sum_2;  // sfix11
  wire [12:0] Sum_out1;  // ufix13
  wire signed [16:0] Min_op_stage2;  // sfix17
  wire signed [10:0] Sum1_add_temp;  // sfix11
  wire signed [10:0] Sum1_1;  // sfix11
  wire signed [10:0] Sum1_2;  // sfix11
  wire [12:0] Sum1_out1;  // ufix13
  wire signed [16:0] Min_op_stage3;  // sfix17
  wire signed [10:0] Sum2_add_temp;  // sfix11
  wire signed [10:0] Sum2_1;  // sfix11
  wire signed [10:0] Sum2_2;  // sfix11
  wire signed [15:0] Sum2_out1;  // int16
  wire signed [16:0] Min_op_stage4;  // sfix17
  wire signed [15:0] Min_out1;  // int16
  wire signed [16:0] Sum3_1;  // sfix17
  wire signed [16:0] Sum3_2;  // sfix17
  wire signed [16:0] Sum3_out1;  // sfix17
  wire signed [17:0] Sum4_sub_temp;  // sfix18
  wire signed [17:0] Sum4_1;  // sfix18
  wire signed [17:0] Sum4_2;  // sfix18
  wire signed [9:0] Sum4_out1;  // sfix10


  assign Constant_out1 = 5'b01111;



  assign Constant1_out1 = 8'b11001000;



  assign Min_op_stage1 = {{7{prevCost_d[9]}}, prevCost_d};



  assign Sum_1 = {prevCost_d_1[9], prevCost_d_1};
  assign Sum_2 = {6'b0, Constant_out1};
  assign Sum_add_temp = Sum_1 + Sum_2;
  assign Sum_out1 = (Sum_add_temp[10] == 1'b1 ? 13'b0000000000000 :
              {{2{Sum_add_temp[10]}}, Sum_add_temp});



  assign Min_op_stage2 = {4'b0, Sum_out1};



  assign Sum1_1 = {6'b0, Constant_out1};
  assign Sum1_2 = {prevCost_d_1_1[9], prevCost_d_1_1};
  assign Sum1_add_temp = Sum1_1 + Sum1_2;
  assign Sum1_out1 = (Sum1_add_temp[10] == 1'b1 ? 13'b0000000000000 :
              {{2{Sum1_add_temp[10]}}, Sum1_add_temp});



  assign Min_op_stage3 = {4'b0, Sum1_out1};



  assign Sum2_1 = {3'b0, Constant1_out1};
  assign Sum2_2 = {minPrevCost[9], minPrevCost};
  assign Sum2_add_temp = Sum2_1 + Sum2_2;
  assign Sum2_out1 = {{5{Sum2_add_temp[10]}}, Sum2_add_temp};



  assign Min_op_stage4 = {Sum2_out1[15], Sum2_out1};



  SGBMHDLAl_ip_src_Min u_Min (.in0(Min_op_stage1),  // sfix17
                              .in1(Min_op_stage2),  // sfix17
                              .in2(Min_op_stage3),  // sfix17
                              .in3(Min_op_stage4),  // sfix17
                              .out0(Min_out1)  // int16
                              );

  assign Sum3_1 = {12'b0, matchingCost};
  assign Sum3_2 = {Min_out1[15], Min_out1};
  assign Sum3_out1 = Sum3_1 + Sum3_2;



  assign Sum4_1 = {Sum3_out1[16], Sum3_out1};
  assign Sum4_2 = {{8{minPrevCost[9]}}, minPrevCost};
  assign Sum4_sub_temp = Sum4_1 - Sum4_2;
  assign Sum4_out1 = ((Sum4_sub_temp[17] == 1'b0) && (Sum4_sub_temp[16:9] != 8'b00000000) ? 10'sb0111111111 :
              ((Sum4_sub_temp[17] == 1'b1) && (Sum4_sub_temp[16:9] != 8'b11111111) ? 10'sb1000000000 :
              $signed(Sum4_sub_temp[9:0])));



  assign currCost = Sum4_out1;

endmodule  // SGBMHDLAl_ip_src_minCostPath

