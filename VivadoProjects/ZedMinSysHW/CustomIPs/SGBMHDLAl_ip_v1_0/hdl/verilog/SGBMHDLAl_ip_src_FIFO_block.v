// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_FIFO_block.v
// Created: 2021-04-19 19:46:14
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_FIFO_block
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/MatchingCost/CensusTransform1/zeroPadding/FIFO
// Hierarchy Level: 5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_FIFO_block
          (clk,
           reset,
           enb,
           dataIn,
           Push,
           Pop,
           Reset_1,
           dataOut,
           empty);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] dataIn;  // uint8
  input   Push;
  input   Pop;
  input   Reset_1;
  output  [7:0] dataOut;  // uint8
  output  empty;


  reg [12:0] HDL_Counter_out1;  // ufix13
  reg [12:0] HDL_Counter1_out1;  // ufix13
  wire [7:0] Simple_Dual_Port_RAM_out1;  // uint8
  wire EmpltyFlag_relop1;


  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 7728
  always @(posedge clk or posedge reset)
    begin : HDL_Counter_process
      if (reset == 1'b1) begin
        HDL_Counter_out1 <= 13'b0000000000000;
      end
      else begin
        if (enb) begin
          if (Reset_1 == 1'b1) begin
            HDL_Counter_out1 <= 13'b0000000000000;
          end
          else if (Push == 1'b1) begin
            if (HDL_Counter_out1 >= 13'b1111000110000) begin
              HDL_Counter_out1 <= 13'b0000000000000;
            end
            else begin
              HDL_Counter_out1 <= HDL_Counter_out1 + 13'b0000000000001;
            end
          end
        end
      end
    end



  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 7728
  always @(posedge clk or posedge reset)
    begin : HDL_Counter1_process
      if (reset == 1'b1) begin
        HDL_Counter1_out1 <= 13'b0000000000000;
      end
      else begin
        if (enb) begin
          if (Reset_1 == 1'b1) begin
            HDL_Counter1_out1 <= 13'b0000000000000;
          end
          else if (Pop == 1'b1) begin
            if (HDL_Counter1_out1 >= 13'b1111000110000) begin
              HDL_Counter1_out1 <= 13'b0000000000000;
            end
            else begin
              HDL_Counter1_out1 <= HDL_Counter1_out1 + 13'b0000000000001;
            end
          end
        end
      end
    end



  SGBMHDLAl_ip_src_SimpleDualPortRAM_generic #(.AddrWidth(13),
                                               .DataWidth(8)
                                               )
                                             u_Simple_Dual_Port_RAM (.clk(clk),
                                                                     .enb(enb),
                                                                     .wr_din(dataIn),
                                                                     .wr_addr(HDL_Counter_out1),
                                                                     .wr_en(Push),
                                                                     .rd_addr(HDL_Counter1_out1),
                                                                     .rd_dout(Simple_Dual_Port_RAM_out1)
                                                                     );

  assign dataOut = Simple_Dual_Port_RAM_out1;

  assign EmpltyFlag_relop1 = HDL_Counter_out1 == HDL_Counter1_out1;



  assign empty = EmpltyFlag_relop1;

endmodule  // SGBMHDLAl_ip_src_FIFO_block

