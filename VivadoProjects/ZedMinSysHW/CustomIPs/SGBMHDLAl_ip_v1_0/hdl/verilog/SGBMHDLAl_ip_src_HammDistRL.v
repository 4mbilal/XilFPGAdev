// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_HammDistRL.v
// Created: 2021-04-19 19:46:15
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_HammDistRL
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/MatchingCost/HammDistRL
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_HammDistRL
          (clk,
           reset,
           enb,
           leftIn,
           leftBus_hStart,
           leftBus_hEnd,
           leftBus_vStart,
           leftBus_valid,
           rightIn,
           rightBus_hStart,
           rightBus_hEnd,
           rightBus_vStart,
           rightBus_valid,
           hammDist_0,
           hammDist_1,
           hammDist_2,
           hammDist_3,
           hammDist_4,
           hammDist_5,
           hammDist_6,
           hammDist_7,
           hammDist_8,
           hammDist_9,
           hammDist_10,
           hammDist_11,
           hammDist_12,
           hammDist_13,
           hammDist_14,
           hammDist_15,
           busOut_hStart,
           busOut_hEnd,
           busOut_vStart,
           busOut_vEnd,
           busOut_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [30:0] leftIn;  // ufix31
  input   leftBus_hStart;
  input   leftBus_hEnd;
  input   leftBus_vStart;
  input   leftBus_valid;
  input   [30:0] rightIn;  // ufix31
  input   rightBus_hStart;
  input   rightBus_hEnd;
  input   rightBus_vStart;
  input   rightBus_valid;
  output  [4:0] hammDist_0;  // ufix5
  output  [4:0] hammDist_1;  // ufix5
  output  [4:0] hammDist_2;  // ufix5
  output  [4:0] hammDist_3;  // ufix5
  output  [4:0] hammDist_4;  // ufix5
  output  [4:0] hammDist_5;  // ufix5
  output  [4:0] hammDist_6;  // ufix5
  output  [4:0] hammDist_7;  // ufix5
  output  [4:0] hammDist_8;  // ufix5
  output  [4:0] hammDist_9;  // ufix5
  output  [4:0] hammDist_10;  // ufix5
  output  [4:0] hammDist_11;  // ufix5
  output  [4:0] hammDist_12;  // ufix5
  output  [4:0] hammDist_13;  // ufix5
  output  [4:0] hammDist_14;  // ufix5
  output  [4:0] hammDist_15;  // ufix5
  output  busOut_hStart;
  output  busOut_hEnd;
  output  busOut_vStart;
  output  busOut_vEnd;
  output  busOut_valid;


  wire inverseRowLeft_out1;
  wire [30:0] inverseRowLeft_out2;  // ufix31
  wire inverseRowLeft_out3;
  reg [30:0] Delay64_bypass_delay;  // ufix31
  reg [30:0] Delay64_reg [0:14];  // ufix31 [15]
  wire [30:0] Delay64_bypass_delay_next;  // ufix31
  wire [30:0] Delay64_reg_next [0:14];  // ufix31 [15]
  wire [30:0] Delay64_out1;  // ufix31
  wire Int2Bin_out1_0;
  wire Int2Bin_out1_1;
  wire Int2Bin_out1_2;
  wire Int2Bin_out1_3;
  wire Int2Bin_out1_4;
  wire Int2Bin_out1_5;
  wire Int2Bin_out1_6;
  wire Int2Bin_out1_7;
  wire Int2Bin_out1_8;
  wire Int2Bin_out1_9;
  wire Int2Bin_out1_10;
  wire Int2Bin_out1_11;
  wire Int2Bin_out1_12;
  wire Int2Bin_out1_13;
  wire Int2Bin_out1_14;
  wire Int2Bin_out1_15;
  wire Int2Bin_out1_16;
  wire Int2Bin_out1_17;
  wire Int2Bin_out1_18;
  wire Int2Bin_out1_19;
  wire Int2Bin_out1_20;
  wire Int2Bin_out1_21;
  wire Int2Bin_out1_22;
  wire Int2Bin_out1_23;
  wire Int2Bin_out1_24;
  wire Int2Bin_out1_25;
  wire Int2Bin_out1_26;
  wire Int2Bin_out1_27;
  wire Int2Bin_out1_28;
  wire Int2Bin_out1_29;
  wire Int2Bin_out1_30;
  wire inverseRowLeft1_out1;
  wire [30:0] inverseRowLeft1_out2;  // ufix31
  wire inverseRowLeft1_out3;
  wire [30:0] enabledTappedDelay_out1_0;  // ufix31
  wire [30:0] enabledTappedDelay_out1_1;  // ufix31
  wire [30:0] enabledTappedDelay_out1_2;  // ufix31
  wire [30:0] enabledTappedDelay_out1_3;  // ufix31
  wire [30:0] enabledTappedDelay_out1_4;  // ufix31
  wire [30:0] enabledTappedDelay_out1_5;  // ufix31
  wire [30:0] enabledTappedDelay_out1_6;  // ufix31
  wire [30:0] enabledTappedDelay_out1_7;  // ufix31
  wire [30:0] enabledTappedDelay_out1_8;  // ufix31
  wire [30:0] enabledTappedDelay_out1_9;  // ufix31
  wire [30:0] enabledTappedDelay_out1_10;  // ufix31
  wire [30:0] enabledTappedDelay_out1_11;  // ufix31
  wire [30:0] enabledTappedDelay_out1_12;  // ufix31
  wire [30:0] enabledTappedDelay_out1_13;  // ufix31
  wire [30:0] enabledTappedDelay_out1_14;  // ufix31
  wire [30:0] enabledTappedDelay_out1_15;  // ufix31
  wire [4:0] Delay30_out1_0;  // ufix5
  wire [4:0] Delay30_out1_1;  // ufix5
  wire [4:0] Delay30_out1_2;  // ufix5
  wire [4:0] Delay30_out1_3;  // ufix5
  wire [4:0] Delay30_out1_4;  // ufix5
  wire [4:0] Delay30_out1_5;  // ufix5
  wire [4:0] Delay30_out1_6;  // ufix5
  wire [4:0] Delay30_out1_7;  // ufix5
  wire [4:0] Delay30_out1_8;  // ufix5
  wire [4:0] Delay30_out1_9;  // ufix5
  wire [4:0] Delay30_out1_10;  // ufix5
  wire [4:0] Delay30_out1_11;  // ufix5
  wire [4:0] Delay30_out1_12;  // ufix5
  wire [4:0] Delay30_out1_13;  // ufix5
  wire [4:0] Delay30_out1_14;  // ufix5
  wire [4:0] Delay30_out1_15;  // ufix5
  wire Logical_Operator1_out1;
  wire Logical_Operator2_out1;
  reg [9:0] HDL_Counter16_out1;  // ufix10
  wire Compare_To_Constant8_out1;
  wire CC9_out1;
  wire Logical_Operator3_out1;
  wire Constant4_out1;
  wire Constant5_out1;
  wire Switch4_out1;
  reg  [0:4] Delay31_reg;  // ufix1 [5]
  wire [0:4] Delay31_reg_next;  // ufix1 [5]
  wire Delay31_out1;
  wire pixelBusGenerator_out1_hStart;
  wire pixelBusGenerator_out1_hEnd;
  wire pixelBusGenerator_out1_vStart;
  wire pixelBusGenerator_out1_vEnd;
  wire pixelBusGenerator_out1_valid;


  SGBMHDLAl_ip_src_inverseRowLeft u_inverseRowLeft (.clk(clk),
                                                    .reset(reset),
                                                    .enb(enb),
                                                    .leftIn(leftIn),  // ufix31
                                                    .leftBus_hStart(leftBus_hStart),
                                                    .leftBus_hEnd(leftBus_hEnd),
                                                    .leftBus_vStart(leftBus_vStart),
                                                    .leftBus_valid(leftBus_valid),
                                                    .leftValid(inverseRowLeft_out1),
                                                    .leftOut(inverseRowLeft_out2),  // ufix31
                                                    .leftvStart(inverseRowLeft_out3)
                                                    );

  always @(posedge clk or posedge reset)
    begin : Delay64_process
      if (reset == 1'b1) begin
        Delay64_bypass_delay <= 31'b0000000000000000000000000000000;
        Delay64_reg[0] <= 31'b0000000000000000000000000000000;
        Delay64_reg[1] <= 31'b0000000000000000000000000000000;
        Delay64_reg[2] <= 31'b0000000000000000000000000000000;
        Delay64_reg[3] <= 31'b0000000000000000000000000000000;
        Delay64_reg[4] <= 31'b0000000000000000000000000000000;
        Delay64_reg[5] <= 31'b0000000000000000000000000000000;
        Delay64_reg[6] <= 31'b0000000000000000000000000000000;
        Delay64_reg[7] <= 31'b0000000000000000000000000000000;
        Delay64_reg[8] <= 31'b0000000000000000000000000000000;
        Delay64_reg[9] <= 31'b0000000000000000000000000000000;
        Delay64_reg[10] <= 31'b0000000000000000000000000000000;
        Delay64_reg[11] <= 31'b0000000000000000000000000000000;
        Delay64_reg[12] <= 31'b0000000000000000000000000000000;
        Delay64_reg[13] <= 31'b0000000000000000000000000000000;
        Delay64_reg[14] <= 31'b0000000000000000000000000000000;
      end
      else begin
        if (enb && inverseRowLeft_out1) begin
          Delay64_bypass_delay <= Delay64_bypass_delay_next;
          Delay64_reg[0] <= Delay64_reg_next[0];
          Delay64_reg[1] <= Delay64_reg_next[1];
          Delay64_reg[2] <= Delay64_reg_next[2];
          Delay64_reg[3] <= Delay64_reg_next[3];
          Delay64_reg[4] <= Delay64_reg_next[4];
          Delay64_reg[5] <= Delay64_reg_next[5];
          Delay64_reg[6] <= Delay64_reg_next[6];
          Delay64_reg[7] <= Delay64_reg_next[7];
          Delay64_reg[8] <= Delay64_reg_next[8];
          Delay64_reg[9] <= Delay64_reg_next[9];
          Delay64_reg[10] <= Delay64_reg_next[10];
          Delay64_reg[11] <= Delay64_reg_next[11];
          Delay64_reg[12] <= Delay64_reg_next[12];
          Delay64_reg[13] <= Delay64_reg_next[13];
          Delay64_reg[14] <= Delay64_reg_next[14];
        end
      end
    end

  assign Delay64_out1 = (inverseRowLeft_out1 == 1'b1 ? Delay64_reg[14] :
              Delay64_bypass_delay);
  assign Delay64_bypass_delay_next = Delay64_reg[14];
  assign Delay64_reg_next[0] = inverseRowLeft_out2;
  assign Delay64_reg_next[1] = Delay64_reg[0];
  assign Delay64_reg_next[2] = Delay64_reg[1];
  assign Delay64_reg_next[3] = Delay64_reg[2];
  assign Delay64_reg_next[4] = Delay64_reg[3];
  assign Delay64_reg_next[5] = Delay64_reg[4];
  assign Delay64_reg_next[6] = Delay64_reg[5];
  assign Delay64_reg_next[7] = Delay64_reg[6];
  assign Delay64_reg_next[8] = Delay64_reg[7];
  assign Delay64_reg_next[9] = Delay64_reg[8];
  assign Delay64_reg_next[10] = Delay64_reg[9];
  assign Delay64_reg_next[11] = Delay64_reg[10];
  assign Delay64_reg_next[12] = Delay64_reg[11];
  assign Delay64_reg_next[13] = Delay64_reg[12];
  assign Delay64_reg_next[14] = Delay64_reg[13];



  SGBMHDLAl_ip_src_Int2Bin_block u_Int2Bin (.intIn(Delay64_out1),  // ufix31
                                            .binOut_0(Int2Bin_out1_0),  // boolean
                                            .binOut_1(Int2Bin_out1_1),  // boolean
                                            .binOut_2(Int2Bin_out1_2),  // boolean
                                            .binOut_3(Int2Bin_out1_3),  // boolean
                                            .binOut_4(Int2Bin_out1_4),  // boolean
                                            .binOut_5(Int2Bin_out1_5),  // boolean
                                            .binOut_6(Int2Bin_out1_6),  // boolean
                                            .binOut_7(Int2Bin_out1_7),  // boolean
                                            .binOut_8(Int2Bin_out1_8),  // boolean
                                            .binOut_9(Int2Bin_out1_9),  // boolean
                                            .binOut_10(Int2Bin_out1_10),  // boolean
                                            .binOut_11(Int2Bin_out1_11),  // boolean
                                            .binOut_12(Int2Bin_out1_12),  // boolean
                                            .binOut_13(Int2Bin_out1_13),  // boolean
                                            .binOut_14(Int2Bin_out1_14),  // boolean
                                            .binOut_15(Int2Bin_out1_15),  // boolean
                                            .binOut_16(Int2Bin_out1_16),  // boolean
                                            .binOut_17(Int2Bin_out1_17),  // boolean
                                            .binOut_18(Int2Bin_out1_18),  // boolean
                                            .binOut_19(Int2Bin_out1_19),  // boolean
                                            .binOut_20(Int2Bin_out1_20),  // boolean
                                            .binOut_21(Int2Bin_out1_21),  // boolean
                                            .binOut_22(Int2Bin_out1_22),  // boolean
                                            .binOut_23(Int2Bin_out1_23),  // boolean
                                            .binOut_24(Int2Bin_out1_24),  // boolean
                                            .binOut_25(Int2Bin_out1_25),  // boolean
                                            .binOut_26(Int2Bin_out1_26),  // boolean
                                            .binOut_27(Int2Bin_out1_27),  // boolean
                                            .binOut_28(Int2Bin_out1_28),  // boolean
                                            .binOut_29(Int2Bin_out1_29),  // boolean
                                            .binOut_30(Int2Bin_out1_30)  // boolean
                                            );

  SGBMHDLAl_ip_src_inverseRowLeft1 u_inverseRowLeft1 (.clk(clk),
                                                      .reset(reset),
                                                      .enb(enb),
                                                      .rightIn(rightIn),  // ufix31
                                                      .rightBus_hStart(rightBus_hStart),
                                                      .rightBus_hEnd(rightBus_hEnd),
                                                      .rightBus_vStart(rightBus_vStart),
                                                      .rightBus_valid(rightBus_valid),
                                                      .rightValid(inverseRowLeft1_out1),
                                                      .rightOut(inverseRowLeft1_out2),  // ufix31
                                                      .rightvStart(inverseRowLeft1_out3)
                                                      );

  SGBMHDLAl_ip_src_enabledTappedDelay_block u_enabledTappedDelay (.clk(clk),
                                                                  .reset(reset),
                                                                  .enb(enb),
                                                                  .pixelIn(inverseRowLeft1_out2),  // ufix31
                                                                  .Enable(inverseRowLeft1_out1),
                                                                  .pixelOut_0(enabledTappedDelay_out1_0),  // ufix31
                                                                  .pixelOut_1(enabledTappedDelay_out1_1),  // ufix31
                                                                  .pixelOut_2(enabledTappedDelay_out1_2),  // ufix31
                                                                  .pixelOut_3(enabledTappedDelay_out1_3),  // ufix31
                                                                  .pixelOut_4(enabledTappedDelay_out1_4),  // ufix31
                                                                  .pixelOut_5(enabledTappedDelay_out1_5),  // ufix31
                                                                  .pixelOut_6(enabledTappedDelay_out1_6),  // ufix31
                                                                  .pixelOut_7(enabledTappedDelay_out1_7),  // ufix31
                                                                  .pixelOut_8(enabledTappedDelay_out1_8),  // ufix31
                                                                  .pixelOut_9(enabledTappedDelay_out1_9),  // ufix31
                                                                  .pixelOut_10(enabledTappedDelay_out1_10),  // ufix31
                                                                  .pixelOut_11(enabledTappedDelay_out1_11),  // ufix31
                                                                  .pixelOut_12(enabledTappedDelay_out1_12),  // ufix31
                                                                  .pixelOut_13(enabledTappedDelay_out1_13),  // ufix31
                                                                  .pixelOut_14(enabledTappedDelay_out1_14),  // ufix31
                                                                  .pixelOut_15(enabledTappedDelay_out1_15)  // ufix31
                                                                  );

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance1 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_0),  // ufix31
                                                                .hammDist(Delay30_out1_0)  // ufix5
                                                                );

  assign hammDist_0 = Delay30_out1_0;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance2 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_1),  // ufix31
                                                                .hammDist(Delay30_out1_1)  // ufix5
                                                                );

  assign hammDist_1 = Delay30_out1_1;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance3 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_2),  // ufix31
                                                                .hammDist(Delay30_out1_2)  // ufix5
                                                                );

  assign hammDist_2 = Delay30_out1_2;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance4 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_3),  // ufix31
                                                                .hammDist(Delay30_out1_3)  // ufix5
                                                                );

  assign hammDist_3 = Delay30_out1_3;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance5 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_4),  // ufix31
                                                                .hammDist(Delay30_out1_4)  // ufix5
                                                                );

  assign hammDist_4 = Delay30_out1_4;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance6 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_5),  // ufix31
                                                                .hammDist(Delay30_out1_5)  // ufix5
                                                                );

  assign hammDist_5 = Delay30_out1_5;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance7 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_6),  // ufix31
                                                                .hammDist(Delay30_out1_6)  // ufix5
                                                                );

  assign hammDist_6 = Delay30_out1_6;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance8 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_7),  // ufix31
                                                                .hammDist(Delay30_out1_7)  // ufix5
                                                                );

  assign hammDist_7 = Delay30_out1_7;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance9 (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                .rightCSCTIn(enabledTappedDelay_out1_8),  // ufix31
                                                                .hammDist(Delay30_out1_8)  // ufix5
                                                                );

  assign hammDist_8 = Delay30_out1_8;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance10 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_9),  // ufix31
                                                                 .hammDist(Delay30_out1_9)  // ufix5
                                                                 );

  assign hammDist_9 = Delay30_out1_9;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance11 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_10),  // ufix31
                                                                 .hammDist(Delay30_out1_10)  // ufix5
                                                                 );

  assign hammDist_10 = Delay30_out1_10;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance12 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_11),  // ufix31
                                                                 .hammDist(Delay30_out1_11)  // ufix5
                                                                 );

  assign hammDist_11 = Delay30_out1_11;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance13 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_12),  // ufix31
                                                                 .hammDist(Delay30_out1_12)  // ufix5
                                                                 );

  assign hammDist_12 = Delay30_out1_12;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance14 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_13),  // ufix31
                                                                 .hammDist(Delay30_out1_13)  // ufix5
                                                                 );

  assign hammDist_13 = Delay30_out1_13;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance15 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_14),  // ufix31
                                                                 .hammDist(Delay30_out1_14)  // ufix5
                                                                 );

  assign hammDist_14 = Delay30_out1_14;

  SGBMHDLAl_ip_src_hammDispForEach u_hammDispForEach_instance16 (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .leftCSCTIn_0(Int2Bin_out1_0),  // boolean
                                                                 .leftCSCTIn_1(Int2Bin_out1_1),  // boolean
                                                                 .leftCSCTIn_2(Int2Bin_out1_2),  // boolean
                                                                 .leftCSCTIn_3(Int2Bin_out1_3),  // boolean
                                                                 .leftCSCTIn_4(Int2Bin_out1_4),  // boolean
                                                                 .leftCSCTIn_5(Int2Bin_out1_5),  // boolean
                                                                 .leftCSCTIn_6(Int2Bin_out1_6),  // boolean
                                                                 .leftCSCTIn_7(Int2Bin_out1_7),  // boolean
                                                                 .leftCSCTIn_8(Int2Bin_out1_8),  // boolean
                                                                 .leftCSCTIn_9(Int2Bin_out1_9),  // boolean
                                                                 .leftCSCTIn_10(Int2Bin_out1_10),  // boolean
                                                                 .leftCSCTIn_11(Int2Bin_out1_11),  // boolean
                                                                 .leftCSCTIn_12(Int2Bin_out1_12),  // boolean
                                                                 .leftCSCTIn_13(Int2Bin_out1_13),  // boolean
                                                                 .leftCSCTIn_14(Int2Bin_out1_14),  // boolean
                                                                 .leftCSCTIn_15(Int2Bin_out1_15),  // boolean
                                                                 .leftCSCTIn_16(Int2Bin_out1_16),  // boolean
                                                                 .leftCSCTIn_17(Int2Bin_out1_17),  // boolean
                                                                 .leftCSCTIn_18(Int2Bin_out1_18),  // boolean
                                                                 .leftCSCTIn_19(Int2Bin_out1_19),  // boolean
                                                                 .leftCSCTIn_20(Int2Bin_out1_20),  // boolean
                                                                 .leftCSCTIn_21(Int2Bin_out1_21),  // boolean
                                                                 .leftCSCTIn_22(Int2Bin_out1_22),  // boolean
                                                                 .leftCSCTIn_23(Int2Bin_out1_23),  // boolean
                                                                 .leftCSCTIn_24(Int2Bin_out1_24),  // boolean
                                                                 .leftCSCTIn_25(Int2Bin_out1_25),  // boolean
                                                                 .leftCSCTIn_26(Int2Bin_out1_26),  // boolean
                                                                 .leftCSCTIn_27(Int2Bin_out1_27),  // boolean
                                                                 .leftCSCTIn_28(Int2Bin_out1_28),  // boolean
                                                                 .leftCSCTIn_29(Int2Bin_out1_29),  // boolean
                                                                 .leftCSCTIn_30(Int2Bin_out1_30),  // boolean
                                                                 .rightCSCTIn(enabledTappedDelay_out1_15),  // ufix31
                                                                 .hammDist(Delay30_out1_15)  // ufix5
                                                                 );

  assign hammDist_15 = Delay30_out1_15;

  assign Logical_Operator1_out1 = inverseRowLeft_out3 & inverseRowLeft1_out3;



  assign Logical_Operator2_out1 = inverseRowLeft_out1 & inverseRowLeft1_out1;



  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 639
  always @(posedge clk or posedge reset)
    begin : HDL_Counter16_process
      if (reset == 1'b1) begin
        HDL_Counter16_out1 <= 10'b0000000000;
      end
      else begin
        if (enb) begin
          if (Logical_Operator1_out1 == 1'b1) begin
            HDL_Counter16_out1 <= 10'b0000000000;
          end
          else if (Logical_Operator2_out1 == 1'b1) begin
            if (HDL_Counter16_out1 >= 10'b1001111111) begin
              HDL_Counter16_out1 <= 10'b0000000000;
            end
            else begin
              HDL_Counter16_out1 <= HDL_Counter16_out1 + 10'b0000000001;
            end
          end
        end
      end
    end



  assign Compare_To_Constant8_out1 = HDL_Counter16_out1 >= 10'b0000001111;



  assign CC9_out1 = HDL_Counter16_out1 < 10'b1001111111;



  assign Logical_Operator3_out1 = Logical_Operator2_out1 & (Compare_To_Constant8_out1 & CC9_out1);



  assign Constant4_out1 = 1'b0;



  assign Constant5_out1 = 1'b1;



  assign Switch4_out1 = (Logical_Operator3_out1 == 1'b0 ? Constant4_out1 :
              Constant5_out1);



  always @(posedge clk or posedge reset)
    begin : Delay31_process
      if (reset == 1'b1) begin
        Delay31_reg[0] <= 1'b0;
        Delay31_reg[1] <= 1'b0;
        Delay31_reg[2] <= 1'b0;
        Delay31_reg[3] <= 1'b0;
        Delay31_reg[4] <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay31_reg[0] <= Delay31_reg_next[0];
          Delay31_reg[1] <= Delay31_reg_next[1];
          Delay31_reg[2] <= Delay31_reg_next[2];
          Delay31_reg[3] <= Delay31_reg_next[3];
          Delay31_reg[4] <= Delay31_reg_next[4];
        end
      end
    end

  assign Delay31_out1 = Delay31_reg[4];
  assign Delay31_reg_next[0] = Switch4_out1;
  assign Delay31_reg_next[1] = Delay31_reg[0];
  assign Delay31_reg_next[2] = Delay31_reg[1];
  assign Delay31_reg_next[3] = Delay31_reg[2];
  assign Delay31_reg_next[4] = Delay31_reg[3];



  SGBMHDLAl_ip_src_pixelBusGenerator_block6 u_pixelBusGenerator (.clk(clk),
                                                                 .reset(reset),
                                                                 .enb(enb),
                                                                 .validIn(Delay31_out1),
                                                                 .busOut_hStart(pixelBusGenerator_out1_hStart),
                                                                 .busOut_hEnd(pixelBusGenerator_out1_hEnd),
                                                                 .busOut_vStart(pixelBusGenerator_out1_vStart),
                                                                 .busOut_vEnd(pixelBusGenerator_out1_vEnd),
                                                                 .busOut_valid(pixelBusGenerator_out1_valid)
                                                                 );

  assign busOut_hStart = pixelBusGenerator_out1_hStart;

  assign busOut_hEnd = pixelBusGenerator_out1_hEnd;

  assign busOut_vStart = pixelBusGenerator_out1_vStart;

  assign busOut_vEnd = pixelBusGenerator_out1_vEnd;

  assign busOut_valid = pixelBusGenerator_out1_valid;

endmodule  // SGBMHDLAl_ip_src_HammDistRL

