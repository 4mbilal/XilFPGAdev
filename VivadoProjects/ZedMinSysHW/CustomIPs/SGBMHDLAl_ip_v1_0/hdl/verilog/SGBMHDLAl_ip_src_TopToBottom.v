// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_TopToBottom.v
// Created: 2021-04-19 19:46:13
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_TopToBottom
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/DirectionalCost/TopToBottom
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_TopToBottom
          (clk,
           reset,
           enb,
           matchCostIn_0,
           matchCostIn_1,
           matchCostIn_2,
           matchCostIn_3,
           matchCostIn_4,
           matchCostIn_5,
           matchCostIn_6,
           matchCostIn_7,
           matchCostIn_8,
           matchCostIn_9,
           matchCostIn_10,
           matchCostIn_11,
           matchCostIn_12,
           matchCostIn_13,
           matchCostIn_14,
           matchCostIn_15,
           busIn_valid,
           tbOut_0,
           tbOut_1,
           tbOut_2,
           tbOut_3,
           tbOut_4,
           tbOut_5,
           tbOut_6,
           tbOut_7,
           tbOut_8,
           tbOut_9,
           tbOut_10,
           tbOut_11,
           tbOut_12,
           tbOut_13,
           tbOut_14,
           tbOut_15,
           tbBus_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [4:0] matchCostIn_0;  // ufix5
  input   [4:0] matchCostIn_1;  // ufix5
  input   [4:0] matchCostIn_2;  // ufix5
  input   [4:0] matchCostIn_3;  // ufix5
  input   [4:0] matchCostIn_4;  // ufix5
  input   [4:0] matchCostIn_5;  // ufix5
  input   [4:0] matchCostIn_6;  // ufix5
  input   [4:0] matchCostIn_7;  // ufix5
  input   [4:0] matchCostIn_8;  // ufix5
  input   [4:0] matchCostIn_9;  // ufix5
  input   [4:0] matchCostIn_10;  // ufix5
  input   [4:0] matchCostIn_11;  // ufix5
  input   [4:0] matchCostIn_12;  // ufix5
  input   [4:0] matchCostIn_13;  // ufix5
  input   [4:0] matchCostIn_14;  // ufix5
  input   [4:0] matchCostIn_15;  // ufix5
  input   busIn_valid;
  output  signed [9:0] tbOut_0;  // sfix10
  output  signed [9:0] tbOut_1;  // sfix10
  output  signed [9:0] tbOut_2;  // sfix10
  output  signed [9:0] tbOut_3;  // sfix10
  output  signed [9:0] tbOut_4;  // sfix10
  output  signed [9:0] tbOut_5;  // sfix10
  output  signed [9:0] tbOut_6;  // sfix10
  output  signed [9:0] tbOut_7;  // sfix10
  output  signed [9:0] tbOut_8;  // sfix10
  output  signed [9:0] tbOut_9;  // sfix10
  output  signed [9:0] tbOut_10;  // sfix10
  output  signed [9:0] tbOut_11;  // sfix10
  output  signed [9:0] tbOut_12;  // sfix10
  output  signed [9:0] tbOut_13;  // sfix10
  output  signed [9:0] tbOut_14;  // sfix10
  output  signed [9:0] tbOut_15;  // sfix10
  output  tbBus_valid;


  wire valid;
  wire signed [9:0] tbSubsystem_out1_0;  // sfix10
  wire signed [9:0] tbSubsystem_out1_1;  // sfix10
  wire signed [9:0] tbSubsystem_out1_2;  // sfix10
  wire signed [9:0] tbSubsystem_out1_3;  // sfix10
  wire signed [9:0] tbSubsystem_out1_4;  // sfix10
  wire signed [9:0] tbSubsystem_out1_5;  // sfix10
  wire signed [9:0] tbSubsystem_out1_6;  // sfix10
  wire signed [9:0] tbSubsystem_out1_7;  // sfix10
  wire signed [9:0] tbSubsystem_out1_8;  // sfix10
  wire signed [9:0] tbSubsystem_out1_9;  // sfix10
  wire signed [9:0] tbSubsystem_out1_10;  // sfix10
  wire signed [9:0] tbSubsystem_out1_11;  // sfix10
  wire signed [9:0] tbSubsystem_out1_12;  // sfix10
  wire signed [9:0] tbSubsystem_out1_13;  // sfix10
  wire signed [9:0] tbSubsystem_out1_14;  // sfix10
  wire signed [9:0] tbSubsystem_out1_15;  // sfix10
  reg  Delay_out1_valid;


  assign valid = busIn_valid;

  SGBMHDLAl_ip_src_tbSubsystem u_tbSubsystem (.clk(clk),
                                              .reset(reset),
                                              .enb(enb),
                                              .enable(busIn_valid),
                                              .matchCostIn_0(matchCostIn_0),  // ufix5
                                              .matchCostIn_1(matchCostIn_1),  // ufix5
                                              .matchCostIn_2(matchCostIn_2),  // ufix5
                                              .matchCostIn_3(matchCostIn_3),  // ufix5
                                              .matchCostIn_4(matchCostIn_4),  // ufix5
                                              .matchCostIn_5(matchCostIn_5),  // ufix5
                                              .matchCostIn_6(matchCostIn_6),  // ufix5
                                              .matchCostIn_7(matchCostIn_7),  // ufix5
                                              .matchCostIn_8(matchCostIn_8),  // ufix5
                                              .matchCostIn_9(matchCostIn_9),  // ufix5
                                              .matchCostIn_10(matchCostIn_10),  // ufix5
                                              .matchCostIn_11(matchCostIn_11),  // ufix5
                                              .matchCostIn_12(matchCostIn_12),  // ufix5
                                              .matchCostIn_13(matchCostIn_13),  // ufix5
                                              .matchCostIn_14(matchCostIn_14),  // ufix5
                                              .matchCostIn_15(matchCostIn_15),  // ufix5
                                              .Enable_1(valid),
                                              .tbCost_0(tbSubsystem_out1_0),  // sfix10
                                              .tbCost_1(tbSubsystem_out1_1),  // sfix10
                                              .tbCost_2(tbSubsystem_out1_2),  // sfix10
                                              .tbCost_3(tbSubsystem_out1_3),  // sfix10
                                              .tbCost_4(tbSubsystem_out1_4),  // sfix10
                                              .tbCost_5(tbSubsystem_out1_5),  // sfix10
                                              .tbCost_6(tbSubsystem_out1_6),  // sfix10
                                              .tbCost_7(tbSubsystem_out1_7),  // sfix10
                                              .tbCost_8(tbSubsystem_out1_8),  // sfix10
                                              .tbCost_9(tbSubsystem_out1_9),  // sfix10
                                              .tbCost_10(tbSubsystem_out1_10),  // sfix10
                                              .tbCost_11(tbSubsystem_out1_11),  // sfix10
                                              .tbCost_12(tbSubsystem_out1_12),  // sfix10
                                              .tbCost_13(tbSubsystem_out1_13),  // sfix10
                                              .tbCost_14(tbSubsystem_out1_14),  // sfix10
                                              .tbCost_15(tbSubsystem_out1_15)  // sfix10
                                              );

  assign tbOut_0 = tbSubsystem_out1_0;

  assign tbOut_1 = tbSubsystem_out1_1;

  assign tbOut_2 = tbSubsystem_out1_2;

  assign tbOut_3 = tbSubsystem_out1_3;

  assign tbOut_4 = tbSubsystem_out1_4;

  assign tbOut_5 = tbSubsystem_out1_5;

  assign tbOut_6 = tbSubsystem_out1_6;

  assign tbOut_7 = tbSubsystem_out1_7;

  assign tbOut_8 = tbSubsystem_out1_8;

  assign tbOut_9 = tbSubsystem_out1_9;

  assign tbOut_10 = tbSubsystem_out1_10;

  assign tbOut_11 = tbSubsystem_out1_11;

  assign tbOut_12 = tbSubsystem_out1_12;

  assign tbOut_13 = tbSubsystem_out1_13;

  assign tbOut_14 = tbSubsystem_out1_14;

  assign tbOut_15 = tbSubsystem_out1_15;

  always @(posedge clk or posedge reset)
    begin : c_4_process
      if (reset == 1'b1) begin
        Delay_out1_valid <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay_out1_valid <= busIn_valid;
        end
      end
    end



  assign tbBus_valid = Delay_out1_valid;

endmodule  // SGBMHDLAl_ip_src_TopToBottom

