// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_Min_block2.v
// Created: 2021-04-19 19:46:11
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_Min_block2
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/DirectionalCost/TopToBottom/tbSubsystem/Min/Min
// Hierarchy Level: 5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_Min_block2
          (in0_0,
           in0_1,
           in0_2,
           in0_3,
           in0_4,
           in0_5,
           in0_6,
           in0_7,
           in0_8,
           in0_9,
           in0_10,
           in0_11,
           in0_12,
           in0_13,
           in0_14,
           in0_15,
           out0);


  input   signed [9:0] in0_0;  // sfix10
  input   signed [9:0] in0_1;  // sfix10
  input   signed [9:0] in0_2;  // sfix10
  input   signed [9:0] in0_3;  // sfix10
  input   signed [9:0] in0_4;  // sfix10
  input   signed [9:0] in0_5;  // sfix10
  input   signed [9:0] in0_6;  // sfix10
  input   signed [9:0] in0_7;  // sfix10
  input   signed [9:0] in0_8;  // sfix10
  input   signed [9:0] in0_9;  // sfix10
  input   signed [9:0] in0_10;  // sfix10
  input   signed [9:0] in0_11;  // sfix10
  input   signed [9:0] in0_12;  // sfix10
  input   signed [9:0] in0_13;  // sfix10
  input   signed [9:0] in0_14;  // sfix10
  input   signed [9:0] in0_15;  // sfix10
  output  signed [9:0] out0;  // sfix10


  wire signed [9:0] in0 [0:15];  // sfix10 [16]
  wire signed [9:0] Min_stage1_val [0:7];  // sfix10 [8]
  wire signed [9:0] Min_stage2_val [0:3];  // sfix10 [4]
  wire signed [9:0] Min_stage3_val [0:1];  // sfix10 [2]
  wire signed [9:0] Min_stage4_val;  // sfix10


  assign in0[0] = in0_0;
  assign in0[1] = in0_1;
  assign in0[2] = in0_2;
  assign in0[3] = in0_3;
  assign in0[4] = in0_4;
  assign in0[5] = in0_5;
  assign in0[6] = in0_6;
  assign in0[7] = in0_7;
  assign in0[8] = in0_8;
  assign in0[9] = in0_9;
  assign in0[10] = in0_10;
  assign in0[11] = in0_11;
  assign in0[12] = in0_12;
  assign in0[13] = in0_13;
  assign in0[14] = in0_14;
  assign in0[15] = in0_15;

  // ---- Tree min implementation ----
  // ---- Tree min stage 1 ----
  assign Min_stage1_val[0] = (in0[0] <= in0[1] ? in0[0] :
              in0[1]);
  assign Min_stage1_val[1] = (in0[2] <= in0[3] ? in0[2] :
              in0[3]);
  assign Min_stage1_val[2] = (in0[4] <= in0[5] ? in0[4] :
              in0[5]);
  assign Min_stage1_val[3] = (in0[6] <= in0[7] ? in0[6] :
              in0[7]);
  assign Min_stage1_val[4] = (in0[8] <= in0[9] ? in0[8] :
              in0[9]);
  assign Min_stage1_val[5] = (in0[10] <= in0[11] ? in0[10] :
              in0[11]);
  assign Min_stage1_val[6] = (in0[12] <= in0[13] ? in0[12] :
              in0[13]);
  assign Min_stage1_val[7] = (in0[14] <= in0[15] ? in0[14] :
              in0[15]);



  // ---- Tree min stage 2 ----
  assign Min_stage2_val[0] = (Min_stage1_val[0] <= Min_stage1_val[1] ? Min_stage1_val[0] :
              Min_stage1_val[1]);
  assign Min_stage2_val[1] = (Min_stage1_val[2] <= Min_stage1_val[3] ? Min_stage1_val[2] :
              Min_stage1_val[3]);
  assign Min_stage2_val[2] = (Min_stage1_val[4] <= Min_stage1_val[5] ? Min_stage1_val[4] :
              Min_stage1_val[5]);
  assign Min_stage2_val[3] = (Min_stage1_val[6] <= Min_stage1_val[7] ? Min_stage1_val[6] :
              Min_stage1_val[7]);



  // ---- Tree min stage 3 ----
  assign Min_stage3_val[0] = (Min_stage2_val[0] <= Min_stage2_val[1] ? Min_stage2_val[0] :
              Min_stage2_val[1]);
  assign Min_stage3_val[1] = (Min_stage2_val[2] <= Min_stage2_val[3] ? Min_stage2_val[2] :
              Min_stage2_val[3]);



  // ---- Tree min stage 4 ----
  assign Min_stage4_val = (Min_stage3_val[0] <= Min_stage3_val[1] ? Min_stage3_val[0] :
              Min_stage3_val[1]);



  assign out0 = Min_stage4_val;

endmodule  // SGBMHDLAl_ip_src_Min_block2

