// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_MatchingCost.v
// Created: 2021-04-19 19:46:15
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_MatchingCost
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/MatchingCost
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_MatchingCost
          (clk,
           reset,
           enb,
           pixelLeft,
           pixelRight,
           busIn_hStart,
           busIn_vStart,
           busIn_valid,
           hammDistA_0,
           hammDistA_1,
           hammDistA_2,
           hammDistA_3,
           hammDistA_4,
           hammDistA_5,
           hammDistA_6,
           hammDistA_7,
           hammDistA_8,
           hammDistA_9,
           hammDistA_10,
           hammDistA_11,
           hammDistA_12,
           hammDistA_13,
           hammDistA_14,
           hammDistA_15,
           hammDistValidA_vStart,
           hammDistValidA_valid,
           hammDistRL_0,
           hammDistRL_1,
           hammDistRL_2,
           hammDistRL_3,
           hammDistRL_4,
           hammDistRL_5,
           hammDistRL_6,
           hammDistRL_7,
           hammDistRL_8,
           hammDistRL_9,
           hammDistRL_10,
           hammDistRL_11,
           hammDistRL_12,
           hammDistRL_13,
           hammDistRL_14,
           hammDistRL_15,
           hammDistValidRL_hStart,
           hammDistValidRL_hEnd,
           hammDistValidRL_vStart,
           hammDistValidRL_vEnd,
           hammDistValidRL_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] pixelLeft;  // uint8
  input   [7:0] pixelRight;  // uint8
  input   busIn_hStart;
  input   busIn_vStart;
  input   busIn_valid;
  output  [4:0] hammDistA_0;  // ufix5
  output  [4:0] hammDistA_1;  // ufix5
  output  [4:0] hammDistA_2;  // ufix5
  output  [4:0] hammDistA_3;  // ufix5
  output  [4:0] hammDistA_4;  // ufix5
  output  [4:0] hammDistA_5;  // ufix5
  output  [4:0] hammDistA_6;  // ufix5
  output  [4:0] hammDistA_7;  // ufix5
  output  [4:0] hammDistA_8;  // ufix5
  output  [4:0] hammDistA_9;  // ufix5
  output  [4:0] hammDistA_10;  // ufix5
  output  [4:0] hammDistA_11;  // ufix5
  output  [4:0] hammDistA_12;  // ufix5
  output  [4:0] hammDistA_13;  // ufix5
  output  [4:0] hammDistA_14;  // ufix5
  output  [4:0] hammDistA_15;  // ufix5
  output  hammDistValidA_vStart;
  output  hammDistValidA_valid;
  output  [4:0] hammDistRL_0;  // ufix5
  output  [4:0] hammDistRL_1;  // ufix5
  output  [4:0] hammDistRL_2;  // ufix5
  output  [4:0] hammDistRL_3;  // ufix5
  output  [4:0] hammDistRL_4;  // ufix5
  output  [4:0] hammDistRL_5;  // ufix5
  output  [4:0] hammDistRL_6;  // ufix5
  output  [4:0] hammDistRL_7;  // ufix5
  output  [4:0] hammDistRL_8;  // ufix5
  output  [4:0] hammDistRL_9;  // ufix5
  output  [4:0] hammDistRL_10;  // ufix5
  output  [4:0] hammDistRL_11;  // ufix5
  output  [4:0] hammDistRL_12;  // ufix5
  output  [4:0] hammDistRL_13;  // ufix5
  output  [4:0] hammDistRL_14;  // ufix5
  output  [4:0] hammDistRL_15;  // ufix5
  output  hammDistValidRL_hStart;
  output  hammDistValidRL_hEnd;
  output  hammDistValidRL_vStart;
  output  hammDistValidRL_vEnd;
  output  hammDistValidRL_valid;


  wire [30:0] CensusTransform_out1;  // ufix31
  wire CensusTransform_out2_hStart;
  wire CensusTransform_out2_hEnd;
  wire CensusTransform_out2_vStart;
  wire CensusTransform_out2_valid;
  wire [30:0] CensusTransform1_out1;  // ufix31
  wire CensusTransform1_out2_hStart;
  wire CensusTransform1_out2_hEnd;
  wire CensusTransform1_out2_vStart;
  wire CensusTransform1_out2_valid;
  wire [4:0] HammDistA_out1_0;  // ufix5
  wire [4:0] HammDistA_out1_1;  // ufix5
  wire [4:0] HammDistA_out1_2;  // ufix5
  wire [4:0] HammDistA_out1_3;  // ufix5
  wire [4:0] HammDistA_out1_4;  // ufix5
  wire [4:0] HammDistA_out1_5;  // ufix5
  wire [4:0] HammDistA_out1_6;  // ufix5
  wire [4:0] HammDistA_out1_7;  // ufix5
  wire [4:0] HammDistA_out1_8;  // ufix5
  wire [4:0] HammDistA_out1_9;  // ufix5
  wire [4:0] HammDistA_out1_10;  // ufix5
  wire [4:0] HammDistA_out1_11;  // ufix5
  wire [4:0] HammDistA_out1_12;  // ufix5
  wire [4:0] HammDistA_out1_13;  // ufix5
  wire [4:0] HammDistA_out1_14;  // ufix5
  wire [4:0] HammDistA_out1_15;  // ufix5
  wire HammDistA_out2_vStart;
  wire HammDistA_out2_valid;
  wire [4:0] HammDistRL_out1_0;  // ufix5
  wire [4:0] HammDistRL_out1_1;  // ufix5
  wire [4:0] HammDistRL_out1_2;  // ufix5
  wire [4:0] HammDistRL_out1_3;  // ufix5
  wire [4:0] HammDistRL_out1_4;  // ufix5
  wire [4:0] HammDistRL_out1_5;  // ufix5
  wire [4:0] HammDistRL_out1_6;  // ufix5
  wire [4:0] HammDistRL_out1_7;  // ufix5
  wire [4:0] HammDistRL_out1_8;  // ufix5
  wire [4:0] HammDistRL_out1_9;  // ufix5
  wire [4:0] HammDistRL_out1_10;  // ufix5
  wire [4:0] HammDistRL_out1_11;  // ufix5
  wire [4:0] HammDistRL_out1_12;  // ufix5
  wire [4:0] HammDistRL_out1_13;  // ufix5
  wire [4:0] HammDistRL_out1_14;  // ufix5
  wire [4:0] HammDistRL_out1_15;  // ufix5
  wire HammDistRL_out2_hStart;
  wire HammDistRL_out2_hEnd;
  wire HammDistRL_out2_vStart;
  wire HammDistRL_out2_vEnd;
  wire HammDistRL_out2_valid;


  SGBMHDLAl_ip_src_CensusTransform u_CensusTransform (.clk(clk),
                                                      .reset(reset),
                                                      .enb(enb),
                                                      .pixelIn(pixelLeft),  // uint8
                                                      .ctrlIn_hStart(busIn_hStart),
                                                      .ctrlIn_vStart(busIn_vStart),
                                                      .ctrlIn_valid(busIn_valid),
                                                      .ctLeft(CensusTransform_out1),  // ufix31
                                                      .busLeft_hStart(CensusTransform_out2_hStart),
                                                      .busLeft_hEnd(CensusTransform_out2_hEnd),
                                                      .busLeft_vStart(CensusTransform_out2_vStart),
                                                      .busLeft_valid(CensusTransform_out2_valid)
                                                      );

  SGBMHDLAl_ip_src_CensusTransform1 u_CensusTransform1 (.clk(clk),
                                                        .reset(reset),
                                                        .enb(enb),
                                                        .pixelIn(pixelRight),  // uint8
                                                        .ctrlIn_hStart(busIn_hStart),
                                                        .ctrlIn_vStart(busIn_vStart),
                                                        .ctrlIn_valid(busIn_valid),
                                                        .ctRight(CensusTransform1_out1),  // ufix31
                                                        .busRight_hStart(CensusTransform1_out2_hStart),
                                                        .busRight_hEnd(CensusTransform1_out2_hEnd),
                                                        .busRight_vStart(CensusTransform1_out2_vStart),
                                                        .busRight_valid(CensusTransform1_out2_valid)
                                                        );

  SGBMHDLAl_ip_src_HammDistA u_HammDistA (.clk(clk),
                                          .reset(reset),
                                          .enb(enb),
                                          .leftIn(CensusTransform_out1),  // ufix31
                                          .leftBus_vStart(CensusTransform_out2_vStart),
                                          .leftBus_valid(CensusTransform_out2_valid),
                                          .rightIn(CensusTransform1_out1),  // ufix31
                                          .rightBus_vStart(CensusTransform1_out2_vStart),
                                          .rightBus_valid(CensusTransform1_out2_valid),
                                          .hammDist_0(HammDistA_out1_0),  // ufix5
                                          .hammDist_1(HammDistA_out1_1),  // ufix5
                                          .hammDist_2(HammDistA_out1_2),  // ufix5
                                          .hammDist_3(HammDistA_out1_3),  // ufix5
                                          .hammDist_4(HammDistA_out1_4),  // ufix5
                                          .hammDist_5(HammDistA_out1_5),  // ufix5
                                          .hammDist_6(HammDistA_out1_6),  // ufix5
                                          .hammDist_7(HammDistA_out1_7),  // ufix5
                                          .hammDist_8(HammDistA_out1_8),  // ufix5
                                          .hammDist_9(HammDistA_out1_9),  // ufix5
                                          .hammDist_10(HammDistA_out1_10),  // ufix5
                                          .hammDist_11(HammDistA_out1_11),  // ufix5
                                          .hammDist_12(HammDistA_out1_12),  // ufix5
                                          .hammDist_13(HammDistA_out1_13),  // ufix5
                                          .hammDist_14(HammDistA_out1_14),  // ufix5
                                          .hammDist_15(HammDistA_out1_15),  // ufix5
                                          .busOut_vStart(HammDistA_out2_vStart),
                                          .busOut_valid(HammDistA_out2_valid)
                                          );

  assign hammDistA_0 = HammDistA_out1_0;

  assign hammDistA_1 = HammDistA_out1_1;

  assign hammDistA_2 = HammDistA_out1_2;

  assign hammDistA_3 = HammDistA_out1_3;

  assign hammDistA_4 = HammDistA_out1_4;

  assign hammDistA_5 = HammDistA_out1_5;

  assign hammDistA_6 = HammDistA_out1_6;

  assign hammDistA_7 = HammDistA_out1_7;

  assign hammDistA_8 = HammDistA_out1_8;

  assign hammDistA_9 = HammDistA_out1_9;

  assign hammDistA_10 = HammDistA_out1_10;

  assign hammDistA_11 = HammDistA_out1_11;

  assign hammDistA_12 = HammDistA_out1_12;

  assign hammDistA_13 = HammDistA_out1_13;

  assign hammDistA_14 = HammDistA_out1_14;

  assign hammDistA_15 = HammDistA_out1_15;

  assign hammDistValidA_vStart = HammDistA_out2_vStart;

  assign hammDistValidA_valid = HammDistA_out2_valid;

  SGBMHDLAl_ip_src_HammDistRL u_HammDistRL (.clk(clk),
                                            .reset(reset),
                                            .enb(enb),
                                            .leftIn(CensusTransform_out1),  // ufix31
                                            .leftBus_hStart(CensusTransform_out2_hStart),
                                            .leftBus_hEnd(CensusTransform_out2_hEnd),
                                            .leftBus_vStart(CensusTransform_out2_vStart),
                                            .leftBus_valid(CensusTransform_out2_valid),
                                            .rightIn(CensusTransform1_out1),  // ufix31
                                            .rightBus_hStart(CensusTransform1_out2_hStart),
                                            .rightBus_hEnd(CensusTransform1_out2_hEnd),
                                            .rightBus_vStart(CensusTransform1_out2_vStart),
                                            .rightBus_valid(CensusTransform1_out2_valid),
                                            .hammDist_0(HammDistRL_out1_0),  // ufix5
                                            .hammDist_1(HammDistRL_out1_1),  // ufix5
                                            .hammDist_2(HammDistRL_out1_2),  // ufix5
                                            .hammDist_3(HammDistRL_out1_3),  // ufix5
                                            .hammDist_4(HammDistRL_out1_4),  // ufix5
                                            .hammDist_5(HammDistRL_out1_5),  // ufix5
                                            .hammDist_6(HammDistRL_out1_6),  // ufix5
                                            .hammDist_7(HammDistRL_out1_7),  // ufix5
                                            .hammDist_8(HammDistRL_out1_8),  // ufix5
                                            .hammDist_9(HammDistRL_out1_9),  // ufix5
                                            .hammDist_10(HammDistRL_out1_10),  // ufix5
                                            .hammDist_11(HammDistRL_out1_11),  // ufix5
                                            .hammDist_12(HammDistRL_out1_12),  // ufix5
                                            .hammDist_13(HammDistRL_out1_13),  // ufix5
                                            .hammDist_14(HammDistRL_out1_14),  // ufix5
                                            .hammDist_15(HammDistRL_out1_15),  // ufix5
                                            .busOut_hStart(HammDistRL_out2_hStart),
                                            .busOut_hEnd(HammDistRL_out2_hEnd),
                                            .busOut_vStart(HammDistRL_out2_vStart),
                                            .busOut_vEnd(HammDistRL_out2_vEnd),
                                            .busOut_valid(HammDistRL_out2_valid)
                                            );

  assign hammDistRL_0 = HammDistRL_out1_0;

  assign hammDistRL_1 = HammDistRL_out1_1;

  assign hammDistRL_2 = HammDistRL_out1_2;

  assign hammDistRL_3 = HammDistRL_out1_3;

  assign hammDistRL_4 = HammDistRL_out1_4;

  assign hammDistRL_5 = HammDistRL_out1_5;

  assign hammDistRL_6 = HammDistRL_out1_6;

  assign hammDistRL_7 = HammDistRL_out1_7;

  assign hammDistRL_8 = HammDistRL_out1_8;

  assign hammDistRL_9 = HammDistRL_out1_9;

  assign hammDistRL_10 = HammDistRL_out1_10;

  assign hammDistRL_11 = HammDistRL_out1_11;

  assign hammDistRL_12 = HammDistRL_out1_12;

  assign hammDistRL_13 = HammDistRL_out1_13;

  assign hammDistRL_14 = HammDistRL_out1_14;

  assign hammDistRL_15 = HammDistRL_out1_15;

  assign hammDistValidRL_hStart = HammDistRL_out2_hStart;

  assign hammDistValidRL_hEnd = HammDistRL_out2_hEnd;

  assign hammDistValidRL_vStart = HammDistRL_out2_vStart;

  assign hammDistValidRL_vEnd = HammDistRL_out2_vEnd;

  assign hammDistValidRL_valid = HammDistRL_out2_valid;

endmodule  // SGBMHDLAl_ip_src_MatchingCost

