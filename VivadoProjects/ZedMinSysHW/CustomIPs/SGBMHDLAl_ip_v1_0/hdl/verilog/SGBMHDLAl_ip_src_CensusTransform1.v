// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\SGBMDisparity\SGBMHDLAl_ip_src_CensusTransform1.v
// Created: 2021-04-19 19:46:14
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SGBMHDLAl_ip_src_CensusTransform1
// Source Path: SGBMDisparity/SGBMHDLAlgorithm/SGBMHDLAlgorithmWorker/MatchingCost/CensusTransform1
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SGBMHDLAl_ip_src_CensusTransform1
          (clk,
           reset,
           enb,
           pixelIn,
           ctrlIn_hStart,
           ctrlIn_vStart,
           ctrlIn_valid,
           ctRight,
           busRight_hStart,
           busRight_hEnd,
           busRight_vStart,
           busRight_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] pixelIn;  // uint8
  input   ctrlIn_hStart;
  input   ctrlIn_vStart;
  input   ctrlIn_valid;
  output  [30:0] ctRight;  // ufix31
  output  busRight_hStart;
  output  busRight_hEnd;
  output  busRight_vStart;
  output  busRight_valid;


  wire [7:0] zeroPadding_out1;  // uint8
  wire zeroPadding_out2;
  wire zeroPadding_out3;
  wire [30:0] ctLogic_out1;  // ufix31
  wire validLogic_out1_hEnd;
  wire validLogic_out1_vStart;
  wire validLogic_out1_valid;
  wire [30:0] dataAligner_out1;  // ufix31
  wire dataAligner_out2_hStart;
  wire dataAligner_out2_hEnd;
  wire dataAligner_out2_vStart;
  wire dataAligner_out2_valid;


  SGBMHDLAl_ip_src_zeroPadding_block u_zeroPadding (.clk(clk),
                                                    .reset(reset),
                                                    .enb(enb),
                                                    .pixelIn(pixelIn),  // uint8
                                                    .ctrlIn_hStart(ctrlIn_hStart),
                                                    .ctrlIn_vStart(ctrlIn_vStart),
                                                    .ctrlIn_valid(ctrlIn_valid),
                                                    .pixelOut(zeroPadding_out1),  // uint8
                                                    .validOut(zeroPadding_out2),
                                                    .resetOut(zeroPadding_out3)
                                                    );

  SGBMHDLAl_ip_src_ctLogic_block u_ctLogic (.clk(clk),
                                            .reset(reset),
                                            .enb(enb),
                                            .pixelIn(zeroPadding_out1),  // uint8
                                            .Enable(zeroPadding_out2),
                                            .resultOut(ctLogic_out1)  // ufix31
                                            );

  SGBMHDLAl_ip_src_validLogic_block u_validLogic (.clk(clk),
                                                  .reset(reset),
                                                  .enb(enb),
                                                  .validIn(zeroPadding_out2),
                                                  .reset_1(zeroPadding_out3),
                                                  .busOut_hEnd(validLogic_out1_hEnd),
                                                  .busOut_vStart(validLogic_out1_vStart),
                                                  .busOut_valid(validLogic_out1_valid)
                                                  );

  SGBMHDLAl_ip_src_dataAligner_block u_dataAligner (.clk(clk),
                                                    .reset(reset),
                                                    .enb(enb),
                                                    .dataIn(ctLogic_out1),  // ufix31
                                                    .busIn_hEnd(validLogic_out1_hEnd),
                                                    .busIn_vStart(validLogic_out1_vStart),
                                                    .busIn_valid(validLogic_out1_valid),
                                                    .dataOut(dataAligner_out1),  // ufix31
                                                    .busOut_hStart(dataAligner_out2_hStart),
                                                    .busOut_hEnd(dataAligner_out2_hEnd),
                                                    .busOut_vStart(dataAligner_out2_vStart),
                                                    .busOut_valid(dataAligner_out2_valid)
                                                    );

  assign ctRight = dataAligner_out1;

  assign busRight_hStart = dataAligner_out2_hStart;

  assign busRight_hEnd = dataAligner_out2_hEnd;

  assign busRight_vStart = dataAligner_out2_vStart;

  assign busRight_valid = dataAligner_out2_valid;

endmodule  // SGBMHDLAl_ip_src_CensusTransform1

