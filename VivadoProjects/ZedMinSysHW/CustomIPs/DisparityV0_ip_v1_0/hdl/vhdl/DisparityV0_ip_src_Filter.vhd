-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\Disparity_CT\DisparityV0_ip_src_Filter.vhd
-- Created: 2021-04-25 08:29:30
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DisparityV0_ip_src_Filter
-- Source Path: Disparity_CT/DisparityV0/ct/Filter
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.DisparityV0_ip_src_DisparityV0_pkg.ALL;

ENTITY DisparityV0_ip_src_Filter IS
  PORT( d1                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        d2                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        d3                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        d4                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        d5                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        d6                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        d7                                :   IN    vector_of_std_logic_vector8(0 TO 8);  -- uint8 [9]
        y                                 :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END DisparityV0_ip_src_Filter;


ARCHITECTURE rtl OF DisparityV0_ip_src_Filter IS

  -- Signals
  SIGNAL d1_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL d2_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL d3_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL d4_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL d5_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL d6_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL d7_unsigned                      : vector_of_unsigned8(0 TO 8);  -- uint8 [9]
  SIGNAL y_tmp                            : unsigned(31 DOWNTO 0);  -- uint32

BEGIN
  outputgen6: FOR k IN 0 TO 8 GENERATE
    d1_unsigned(k) <= unsigned(d1(k));
  END GENERATE;

  outputgen5: FOR k IN 0 TO 8 GENERATE
    d2_unsigned(k) <= unsigned(d2(k));
  END GENERATE;

  outputgen4: FOR k IN 0 TO 8 GENERATE
    d3_unsigned(k) <= unsigned(d3(k));
  END GENERATE;

  outputgen3: FOR k IN 0 TO 8 GENERATE
    d4_unsigned(k) <= unsigned(d4(k));
  END GENERATE;

  outputgen2: FOR k IN 0 TO 8 GENERATE
    d5_unsigned(k) <= unsigned(d5(k));
  END GENERATE;

  outputgen1: FOR k IN 0 TO 8 GENERATE
    d6_unsigned(k) <= unsigned(d6(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 8 GENERATE
    d7_unsigned(k) <= unsigned(d7(k));
  END GENERATE;

  Filter_output : PROCESS (d1_unsigned, d2_unsigned, d3_unsigned, d4_unsigned, d5_unsigned, d6_unsigned,
       d7_unsigned)
    VARIABLE d : matrix_of_unsigned8(0 TO 6, 0 TO 8);
    VARIABLE c1 : std_logic;
    VARIABLE c2 : std_logic;
    VARIABLE c3 : std_logic;
    VARIABLE c4 : std_logic;
    VARIABLE c5 : std_logic;
    VARIABLE c6 : std_logic;
    VARIABLE c7 : std_logic;
    VARIABLE c8 : std_logic;
    VARIABLE c9 : std_logic;
    VARIABLE c10 : std_logic;
    VARIABLE c11 : std_logic;
    VARIABLE c12 : std_logic;
    VARIABLE c13 : std_logic;
    VARIABLE c14 : std_logic;
    VARIABLE c15 : std_logic;
    VARIABLE c16 : std_logic;
    VARIABLE c17 : std_logic;
    VARIABLE c18 : std_logic;
    VARIABLE c19 : std_logic;
    VARIABLE c20 : std_logic;
    VARIABLE c21 : std_logic;
    VARIABLE c22 : std_logic;
    VARIABLE c23 : std_logic;
    VARIABLE c24 : std_logic;
    VARIABLE c25 : std_logic;
    VARIABLE c26 : std_logic;
    VARIABLE c27 : std_logic;
    VARIABLE c28 : std_logic;
    VARIABLE c29 : std_logic;
    VARIABLE c30 : std_logic;
    VARIABLE c31 : std_logic;
    VARIABLE c1_0 : std_logic;
    VARIABLE c2_0 : std_logic;
    VARIABLE c3_0 : std_logic;
    VARIABLE c4_0 : std_logic;
    VARIABLE c5_0 : std_logic;
    VARIABLE c6_0 : std_logic;
    VARIABLE c7_0 : std_logic;
    VARIABLE c8_0 : std_logic;
    VARIABLE c9_0 : std_logic;
    VARIABLE c10_0 : std_logic;
    VARIABLE c11_0 : std_logic;
    VARIABLE c12_0 : std_logic;
    VARIABLE c13_0 : std_logic;
    VARIABLE c14_0 : std_logic;
    VARIABLE c15_0 : std_logic;
    VARIABLE c16_0 : std_logic;
    VARIABLE c17_0 : std_logic;
    VARIABLE c18_0 : std_logic;
    VARIABLE c19_0 : std_logic;
    VARIABLE c20_0 : std_logic;
    VARIABLE c21_0 : std_logic;
    VARIABLE c22_0 : std_logic;
    VARIABLE c23_0 : std_logic;
    VARIABLE c24_0 : std_logic;
    VARIABLE c25_0 : std_logic;
    VARIABLE c26_0 : std_logic;
    VARIABLE c27_0 : std_logic;
    VARIABLE c28_0 : std_logic;
    VARIABLE c29_0 : std_logic;
    VARIABLE c30_0 : std_logic;
    VARIABLE c31_0 : std_logic;
    VARIABLE j2 : signed(31 DOWNTO 0);
    VARIABLE xtmp : unsigned(7 DOWNTO 0);
    VARIABLE c31_1 : unsigned(1 DOWNTO 0);
  BEGIN
    j2 := to_signed(16#00000000#, 32);
    xtmp := to_unsigned(16#00#, 8);

    FOR t_0 IN 0 TO 8 LOOP
      d(0, t_0) := d1_unsigned(t_0);
      d(1, t_0) := d2_unsigned(t_0);
      d(2, t_0) := d3_unsigned(t_0);
      d(3, t_0) := d4_unsigned(t_0);
      d(4, t_0) := d5_unsigned(t_0);
      d(5, t_0) := d6_unsigned(t_0);
      d(6, t_0) := d7_unsigned(t_0);
    END LOOP;

    --7x9 matrix

    FOR j1 IN 0 TO 3 LOOP
      j2 := to_signed(8 - j1, 32);

      FOR i IN 0 TO 6 LOOP
        xtmp := d(i, j1);
        d(i, j1) := d(i, to_integer(j2));
        d(i, to_integer(j2)) := xtmp;
      END LOOP;

    END LOOP;

    -- d = fi(d,0,8,0);
    IF d(6, 8) > d(0, 0) THEN 
      c1 := '1';
    ELSE 
      c1 := '0';
    END IF;
    IF d(6, 7) > d(0, 1) THEN 
      c2 := '1';
    ELSE 
      c2 := '0';
    END IF;
    IF d(6, 6) > d(0, 2) THEN 
      c3 := '1';
    ELSE 
      c3 := '0';
    END IF;
    IF d(6, 5) > d(0, 3) THEN 
      c4 := '1';
    ELSE 
      c4 := '0';
    END IF;
    IF d(6, 4) > d(0, 4) THEN 
      c5 := '1';
    ELSE 
      c5 := '0';
    END IF;
    IF d(6, 3) > d(0, 5) THEN 
      c6 := '1';
    ELSE 
      c6 := '0';
    END IF;
    IF d(6, 2) > d(0, 6) THEN 
      c7 := '1';
    ELSE 
      c7 := '0';
    END IF;
    IF d(6, 1) > d(0, 7) THEN 
      c8 := '1';
    ELSE 
      c8 := '0';
    END IF;
    IF d(6, 0) > d(0, 8) THEN 
      c9 := '1';
    ELSE 
      c9 := '0';
    END IF;
    IF d(5, 8) > d(1, 0) THEN 
      c10 := '1';
    ELSE 
      c10 := '0';
    END IF;
    IF d(5, 7) > d(1, 1) THEN 
      c11 := '1';
    ELSE 
      c11 := '0';
    END IF;
    IF d(5, 6) > d(1, 2) THEN 
      c12 := '1';
    ELSE 
      c12 := '0';
    END IF;
    IF d(5, 5) > d(1, 3) THEN 
      c13 := '1';
    ELSE 
      c13 := '0';
    END IF;
    IF d(5, 4) > d(1, 4) THEN 
      c14 := '1';
    ELSE 
      c14 := '0';
    END IF;
    IF d(5, 3) > d(1, 5) THEN 
      c15 := '1';
    ELSE 
      c15 := '0';
    END IF;
    IF d(5, 2) > d(1, 6) THEN 
      c16 := '1';
    ELSE 
      c16 := '0';
    END IF;
    IF d(5, 1) > d(1, 7) THEN 
      c17 := '1';
    ELSE 
      c17 := '0';
    END IF;
    IF d(5, 0) > d(1, 8) THEN 
      c18 := '1';
    ELSE 
      c18 := '0';
    END IF;
    IF d(4, 8) > d(2, 0) THEN 
      c19 := '1';
    ELSE 
      c19 := '0';
    END IF;
    IF d(4, 7) > d(2, 1) THEN 
      c20 := '1';
    ELSE 
      c20 := '0';
    END IF;
    IF d(4, 6) > d(2, 2) THEN 
      c21 := '1';
    ELSE 
      c21 := '0';
    END IF;
    IF d(4, 5) > d(2, 3) THEN 
      c22 := '1';
    ELSE 
      c22 := '0';
    END IF;
    IF d(4, 4) > d(2, 4) THEN 
      c23 := '1';
    ELSE 
      c23 := '0';
    END IF;
    IF d(4, 3) > d(2, 5) THEN 
      c24 := '1';
    ELSE 
      c24 := '0';
    END IF;
    IF d(4, 2) > d(2, 6) THEN 
      c25 := '1';
    ELSE 
      c25 := '0';
    END IF;
    IF d(4, 1) > d(2, 7) THEN 
      c26 := '1';
    ELSE 
      c26 := '0';
    END IF;
    IF d(4, 0) > d(2, 8) THEN 
      c27 := '1';
    ELSE 
      c27 := '0';
    END IF;
    IF d(3, 8) > d(3, 0) THEN 
      c28 := '1';
    ELSE 
      c28 := '0';
    END IF;
    IF d(3, 7) > d(3, 1) THEN 
      c29 := '1';
    ELSE 
      c29 := '0';
    END IF;
    IF d(3, 6) > d(3, 2) THEN 
      c30 := '1';
    ELSE 
      c30 := '0';
    END IF;
    IF d(3, 5) > d(3, 3) THEN 
      c31 := '1';
    ELSE 
      c31 := '0';
    END IF;
    c1_0 := c1;
    c2_0 := c2;
    c3_0 := c3;
    c4_0 := c4;
    c5_0 := c5;
    c6_0 := c6;
    c7_0 := c7;
    c8_0 := c8;
    c9_0 := c9;
    c10_0 := c10;
    c11_0 := c11;
    c12_0 := c12;
    c13_0 := c13;
    c14_0 := c14;
    c15_0 := c15;
    c16_0 := c16;
    c17_0 := c17;
    c18_0 := c18;
    c19_0 := c19;
    c20_0 := c20;
    c21_0 := c21;
    c22_0 := c22;
    c23_0 := c23;
    c24_0 := c24;
    c25_0 := c25;
    c26_0 := c26;
    c27_0 := c27;
    c28_0 := c28;
    c29_0 := c29;
    c30_0 := c30;
    c31_0 := c31;
    c31_1 := unsigned'(c31_0 & '0');
    y_tmp <= c1_0 & c2_0 & c3_0 & c4_0 & c5_0 & c6_0 & c7_0 & c8_0 & c9_0 & c10_0 & c11_0 & c12_0 & c13_0 & c14_0 & c15_0 & c16_0 & c17_0 & c18_0 & c19_0 & c20_0 & c21_0 & c22_0 & c23_0 & c24_0 & c25_0 & c26_0 & c27_0 & c28_0 & c29_0 & c30_0 & c31_1;
  END PROCESS Filter_output;


  y <= std_logic_vector(y_tmp);

END rtl;

