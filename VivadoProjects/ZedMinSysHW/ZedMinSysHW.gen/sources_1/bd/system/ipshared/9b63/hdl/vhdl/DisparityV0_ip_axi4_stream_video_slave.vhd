-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\Disparity_CT\DisparityV0_ip_axi4_stream_video_slave.vhd
-- Created: 2021-04-25 08:29:47
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DisparityV0_ip_axi4_stream_video_slave
-- Source Path: DisparityV0_ip/DisparityV0_ip_axi4_stream_video_slave
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DisparityV0_ip_axi4_stream_video_slave IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        AXI4_Stream_Video_Slave_TDATA     :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        AXI4_Stream_Video_Slave_TVALID    :   IN    std_logic;  -- ufix1
        AXI4_Stream_Video_Slave_TLAST     :   IN    std_logic;  -- ufix1
        AXI4_Stream_Video_Slave_TUSER     :   IN    std_logic;  -- ufix1
        auto_ready                        :   IN    std_logic;  -- ufix1
        write_axi4_stream_video_slave_image_width :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
        write_axi4_stream_video_slave_image_height :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
        write_axi4_stream_video_slave_hporch :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
        write_axi4_stream_video_slave_vporch :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
        AXI4_Stream_Video_Slave_TREADY    :   OUT   std_logic;  -- ufix1
        user_pixel                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        user_ctrl_hStart                  :   OUT   std_logic;  -- ufix1
        user_ctrl_hEnd                    :   OUT   std_logic;  -- ufix1
        user_ctrl_vStart                  :   OUT   std_logic;  -- ufix1
        user_ctrl_vEnd                    :   OUT   std_logic;  -- ufix1
        user_ctrl_valid                   :   OUT   std_logic  -- ufix1
        );
END DisparityV0_ip_axi4_stream_video_slave;


ARCHITECTURE rtl OF DisparityV0_ip_axi4_stream_video_slave IS

  -- Component Declarations
  COMPONENT DisparityV0_ip_fifo_eol
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic;  -- ufix1
          Push                            :   IN    std_logic;  -- ufix1
          Pop                             :   IN    std_logic;  -- ufix1
          Out_rsvd                        :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT DisparityV0_ip_fifo_sof
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic;  -- ufix1
          Push                            :   IN    std_logic;  -- ufix1
          Pop                             :   IN    std_logic;  -- ufix1
          Out_rsvd                        :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT DisparityV0_ip_adapter_in
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          stream_in_fifo_user_data        :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          stream_in_user_valid            :   IN    std_logic;  -- ufix1
          stream_in_user_sof              :   IN    std_logic;  -- ufix1
          stream_in_user_eol              :   IN    std_logic;  -- ufix1
          image_width                     :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
          image_height                    :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
          hporch                          :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
          vporch                          :   IN    std_logic_vector(12 DOWNTO 0);  -- ufix13
          adapter_in_enable               :   IN    std_logic;  -- ufix1
          user_pixel                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          user_ctrl_hStart                :   OUT   std_logic;  -- ufix1
          user_ctrl_hEnd                  :   OUT   std_logic;  -- ufix1
          user_ctrl_vStart                :   OUT   std_logic;  -- ufix1
          user_ctrl_vEnd                  :   OUT   std_logic;  -- ufix1
          adapter_in_valid_out            :   OUT   std_logic;  -- ufix1
          adapter_in_ready_out            :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  COMPONENT DisparityV0_ip_fifo_data
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          In_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          Push                            :   IN    std_logic;  -- ufix1
          Pop                             :   IN    std_logic;  -- ufix1
          Out_rsvd                        :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          Empty                           :   OUT   std_logic;  -- ufix1
          Full                            :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : DisparityV0_ip_fifo_eol
    USE ENTITY work.DisparityV0_ip_fifo_eol(rtl);

  FOR ALL : DisparityV0_ip_fifo_sof
    USE ENTITY work.DisparityV0_ip_fifo_sof(rtl);

  FOR ALL : DisparityV0_ip_adapter_in
    USE ENTITY work.DisparityV0_ip_adapter_in(rtl);

  FOR ALL : DisparityV0_ip_fifo_data
    USE ENTITY work.DisparityV0_ip_fifo_data(rtl);

  -- Signals
  SIGNAL adapter_in_enable                : std_logic;  -- ufix1
  SIGNAL fifo_rd_ack                      : std_logic;  -- ufix1
  SIGNAL stream_in_user_eol               : std_logic;  -- ufix1
  SIGNAL stream_in_user_sof               : std_logic;  -- ufix1
  SIGNAL fifo_empty                       : std_logic;  -- ufix1
  SIGNAL fifo_empty_neg                   : std_logic;  -- ufix1
  SIGNAL stream_in_user_valid             : std_logic;  -- ufix1
  SIGNAL stream_in_fifo_user_data         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL user_pixel_tmp                   : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL adapter_in_valid_out             : std_logic;  -- ufix1
  SIGNAL adapter_in_ready_out             : std_logic;  -- ufix1
  SIGNAL stream_in_user_ready             : std_logic;  -- ufix1
  SIGNAL fifo_full                        : std_logic;  -- ufix1

BEGIN
  u_DisparityV0_ip_fifo_eol_inst : DisparityV0_ip_fifo_eol
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => AXI4_Stream_Video_Slave_TLAST,  -- ufix1
              Push => AXI4_Stream_Video_Slave_TVALID,  -- ufix1
              Pop => fifo_rd_ack,  -- ufix1
              Out_rsvd => stream_in_user_eol  -- ufix1
              );

  u_DisparityV0_ip_fifo_sof_inst : DisparityV0_ip_fifo_sof
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => AXI4_Stream_Video_Slave_TUSER,  -- ufix1
              Push => AXI4_Stream_Video_Slave_TVALID,  -- ufix1
              Pop => fifo_rd_ack,  -- ufix1
              Out_rsvd => stream_in_user_sof  -- ufix1
              );

  u_DisparityV0_ip_DisparityV0_ip_axi4_stream_video_slave_DisparityV0_ip_adapter_in : DisparityV0_ip_adapter_in
    PORT MAP( clk => clk,
              reset => reset,
              stream_in_fifo_user_data => stream_in_fifo_user_data,  -- ufix32
              stream_in_user_valid => stream_in_user_valid,  -- ufix1
              stream_in_user_sof => stream_in_user_sof,  -- ufix1
              stream_in_user_eol => stream_in_user_eol,  -- ufix1
              image_width => write_axi4_stream_video_slave_image_width,  -- ufix13
              image_height => write_axi4_stream_video_slave_image_height,  -- ufix13
              hporch => write_axi4_stream_video_slave_hporch,  -- ufix13
              vporch => write_axi4_stream_video_slave_vporch,  -- ufix13
              adapter_in_enable => adapter_in_enable,  -- ufix1
              user_pixel => user_pixel_tmp,  -- ufix32
              user_ctrl_hStart => user_ctrl_hStart,  -- ufix1
              user_ctrl_hEnd => user_ctrl_hEnd,  -- ufix1
              user_ctrl_vStart => user_ctrl_vStart,  -- ufix1
              user_ctrl_vEnd => user_ctrl_vEnd,  -- ufix1
              adapter_in_valid_out => adapter_in_valid_out,  -- ufix1
              adapter_in_ready_out => adapter_in_ready_out  -- ufix1
              );

  u_DisparityV0_ip_fifo_data_inst : DisparityV0_ip_fifo_data
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              In_rsvd => AXI4_Stream_Video_Slave_TDATA,  -- ufix32
              Push => AXI4_Stream_Video_Slave_TVALID,  -- ufix1
              Pop => fifo_rd_ack,  -- ufix1
              Out_rsvd => stream_in_fifo_user_data,  -- ufix32
              Empty => fifo_empty,  -- ufix1
              Full => fifo_full  -- ufix1
              );

  reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      adapter_in_enable <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        adapter_in_enable <= auto_ready;
      END IF;
    END IF;
  END PROCESS reg_process;


  fifo_empty_neg <=  NOT fifo_empty;

  stream_in_user_valid <= fifo_empty_neg AND fifo_rd_ack;

  stream_in_user_ready <= auto_ready AND adapter_in_ready_out;

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      fifo_rd_ack <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        fifo_rd_ack <= stream_in_user_ready;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  AXI4_Stream_Video_Slave_TREADY <=  NOT fifo_full;

  user_ctrl_valid <= adapter_in_enable AND adapter_in_valid_out;

  user_pixel <= user_pixel_tmp;

END rtl;

