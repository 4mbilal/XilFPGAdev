// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\V1\ContrastS_ip_src_ContrastStretching.v
// Created: 2021-04-17 05:04:37
// 
// Generated by MATLAB 9.10 and HDL Coder 3.18
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ContrastS_ip_src_ContrastStretching
// Source Path: V1/ContrastStretch_HW/ContrastStretching
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module ContrastS_ip_src_ContrastStretching
          (clk,
           reset,
           enb,
           pixelIn_0,
           pixelIn_1,
           pixelIn_2,
           ctrlIn_hStart,
           ctrlIn_hEnd,
           ctrlIn_vStart,
           ctrlIn_vEnd,
           ctrlIn_valid,
           pixelOut_0,
           pixelOut_1,
           pixelOut_2,
           ctrlOut_hStart,
           ctrlOut_hEnd,
           ctrlOut_vStart,
           ctrlOut_vEnd,
           ctrlOut_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [7:0] pixelIn_0;  // uint8
  input   [7:0] pixelIn_1;  // uint8
  input   [7:0] pixelIn_2;  // uint8
  input   ctrlIn_hStart;
  input   ctrlIn_hEnd;
  input   ctrlIn_vStart;
  input   ctrlIn_vEnd;
  input   ctrlIn_valid;
  output  [7:0] pixelOut_0;  // uint8
  output  [7:0] pixelOut_1;  // uint8
  output  [7:0] pixelOut_2;  // uint8
  output  ctrlOut_hStart;
  output  ctrlOut_hEnd;
  output  ctrlOut_vStart;
  output  ctrlOut_vEnd;
  output  ctrlOut_valid;


  wire [7:0] Color_Space_Converter_out1;  // uint8
  wire Color_Space_Converter_out2_hStart;
  wire Color_Space_Converter_out2_hEnd;
  wire Color_Space_Converter_out2_vStart;
  wire Color_Space_Converter_out2_vEnd;
  wire Color_Space_Converter_out2_valid;
  wire vStart;
  wire valid;
  wire [7:0] next_high;  // uint8
  reg [7:0] Delay4_out1;  // uint8
  wire [19:0] next_high_ctr;  // ufix20
  reg [19:0] Delay3_out1;  // ufix20
  wire [7:0] next_low;  // uint8
  reg [7:0] Delay2_out1;  // uint8
  wire [19:0] next_low_ctr;  // ufix20
  reg [19:0] Delay1_out1;  // ufix20
  wire [7:0] out1;  // uint8
  wire [7:0] out2;  // uint8
  reg [7:0] out1_1;  // uint8
  wire [7:0] alpha1_D_Lookup_Table_k;  // ufix8
  wire [15:0] alpha1_D_Lookup_Table_1 [0:254];  // ufix16_En8 [255]
  wire [15:0] alpha1_D_Lookup_Table_out1;  // ufix16_En8
  reg [15:0] alpha1_D_Lookup_Table_out1_1;  // ufix16_En8
  wire [23:0] Divide_out1;  // ufix24_En8
  wire [7:0] Data_Type_Conversion_out1;  // uint8

  initial begin
    alpha1_D_Lookup_Table_out1_1 = 16'b0000000000000000;
  end

  ContrastS_ip_src_Color_Space_Converter u_Color_Space_Converter (.clk(clk),
                                                                  .reset(reset),
                                                                  .enb(enb),
                                                                  .in0_0(pixelIn_0),  // uint8
                                                                  .in0_1(pixelIn_1),  // uint8
                                                                  .in0_2(pixelIn_2),  // uint8
                                                                  .in1_hStart(ctrlIn_hStart),
                                                                  .in1_hEnd(ctrlIn_hEnd),
                                                                  .in1_vStart(ctrlIn_vStart),
                                                                  .in1_vEnd(ctrlIn_vEnd),
                                                                  .in1_valid(ctrlIn_valid),
                                                                  .out0(Color_Space_Converter_out1),  // uint8
                                                                  .out1_hStart(Color_Space_Converter_out2_hStart),
                                                                  .out1_hEnd(Color_Space_Converter_out2_hEnd),
                                                                  .out1_vStart(Color_Space_Converter_out2_vStart),
                                                                  .out1_vEnd(Color_Space_Converter_out2_vEnd),
                                                                  .out1_valid(Color_Space_Converter_out2_valid)
                                                                  );

  assign vStart = Color_Space_Converter_out2_vStart;

  assign valid = Color_Space_Converter_out2_valid;

  always @(posedge clk or posedge reset)
    begin : Delay4_process
      if (reset == 1'b1) begin
        Delay4_out1 <= 8'b11111010;
      end
      else begin
        if (enb) begin
          Delay4_out1 <= next_high;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay3_process
      if (reset == 1'b1) begin
        Delay3_out1 <= 20'b00000000000000000000;
      end
      else begin
        if (enb) begin
          Delay3_out1 <= next_high_ctr;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 8'b10010110;
      end
      else begin
        if (enb) begin
          Delay2_out1 <= next_low;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 20'b00000000000000000000;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= next_low_ctr;
        end
      end
    end



  ContrastS_ip_src_MATLAB_Function u_MATLAB_Function (.in(Color_Space_Converter_out1),  // uint8
                                                      .vstart(vStart),
                                                      .valid(valid),
                                                      .curr_low_ctr(Delay1_out1),  // ufix20
                                                      .curr_low(Delay2_out1),  // uint8
                                                      .curr_high_ctr(Delay3_out1),  // ufix20
                                                      .curr_high(Delay4_out1),  // uint8
                                                      .out1(out1),  // uint8
                                                      .out2(out2),  // uint8
                                                      .next_low_ctr(next_low_ctr),  // ufix20
                                                      .next_low(next_low),  // uint8
                                                      .next_high_ctr(next_high_ctr),  // ufix20
                                                      .next_high(next_high)  // uint8
                                                      );

  always @(posedge clk or posedge reset)
    begin : delayMatch_process
      if (reset == 1'b1) begin
        out1_1 <= 8'b00000000;
      end
      else begin
        if (enb) begin
          out1_1 <= out1;
        end
      end
    end



  assign alpha1_D_Lookup_Table_1[0] = 16'b1111111100000000;
  assign alpha1_D_Lookup_Table_1[1] = 16'b0111111110000000;
  assign alpha1_D_Lookup_Table_1[2] = 16'b0101010100000000;
  assign alpha1_D_Lookup_Table_1[3] = 16'b0011111111000000;
  assign alpha1_D_Lookup_Table_1[4] = 16'b0011001100000000;
  assign alpha1_D_Lookup_Table_1[5] = 16'b0010101010000000;
  assign alpha1_D_Lookup_Table_1[6] = 16'b0010010001101110;
  assign alpha1_D_Lookup_Table_1[7] = 16'b0001111111100000;
  assign alpha1_D_Lookup_Table_1[8] = 16'b0001110001010101;
  assign alpha1_D_Lookup_Table_1[9] = 16'b0001100110000000;
  assign alpha1_D_Lookup_Table_1[10] = 16'b0001011100101111;
  assign alpha1_D_Lookup_Table_1[11] = 16'b0001010101000000;
  assign alpha1_D_Lookup_Table_1[12] = 16'b0001001110011110;
  assign alpha1_D_Lookup_Table_1[13] = 16'b0001001000110111;
  assign alpha1_D_Lookup_Table_1[14] = 16'b0001000100000000;
  assign alpha1_D_Lookup_Table_1[15] = 16'b0000111111110000;
  assign alpha1_D_Lookup_Table_1[16] = 16'b0000111100000000;
  assign alpha1_D_Lookup_Table_1[17] = 16'b0000111000101011;
  assign alpha1_D_Lookup_Table_1[18] = 16'b0000110101101100;
  assign alpha1_D_Lookup_Table_1[19] = 16'b0000110011000000;
  assign alpha1_D_Lookup_Table_1[20] = 16'b0000110000100101;
  assign alpha1_D_Lookup_Table_1[21] = 16'b0000101110010111;
  assign alpha1_D_Lookup_Table_1[22] = 16'b0000101100010110;
  assign alpha1_D_Lookup_Table_1[23] = 16'b0000101010100000;
  assign alpha1_D_Lookup_Table_1[24] = 16'b0000101000110011;
  assign alpha1_D_Lookup_Table_1[25] = 16'b0000100111001111;
  assign alpha1_D_Lookup_Table_1[26] = 16'b0000100101110010;
  assign alpha1_D_Lookup_Table_1[27] = 16'b0000100100011011;
  assign alpha1_D_Lookup_Table_1[28] = 16'b0000100011001011;
  assign alpha1_D_Lookup_Table_1[29] = 16'b0000100010000000;
  assign alpha1_D_Lookup_Table_1[30] = 16'b0000100000111010;
  assign alpha1_D_Lookup_Table_1[31] = 16'b0000011111111000;
  assign alpha1_D_Lookup_Table_1[32] = 16'b0000011110111010;
  assign alpha1_D_Lookup_Table_1[33] = 16'b0000011110000000;
  assign alpha1_D_Lookup_Table_1[34] = 16'b0000011101001001;
  assign alpha1_D_Lookup_Table_1[35] = 16'b0000011100010101;
  assign alpha1_D_Lookup_Table_1[36] = 16'b0000011011100100;
  assign alpha1_D_Lookup_Table_1[37] = 16'b0000011010110110;
  assign alpha1_D_Lookup_Table_1[38] = 16'b0000011010001010;
  assign alpha1_D_Lookup_Table_1[39] = 16'b0000011001100000;
  assign alpha1_D_Lookup_Table_1[40] = 16'b0000011000111000;
  assign alpha1_D_Lookup_Table_1[41] = 16'b0000011000010010;
  assign alpha1_D_Lookup_Table_1[42] = 16'b0000010111101110;
  assign alpha1_D_Lookup_Table_1[43] = 16'b0000010111001100;
  assign alpha1_D_Lookup_Table_1[44] = 16'b0000010110101011;
  assign alpha1_D_Lookup_Table_1[45] = 16'b0000010110001011;
  assign alpha1_D_Lookup_Table_1[46] = 16'b0000010101101101;
  assign alpha1_D_Lookup_Table_1[47] = 16'b0000010101010000;
  assign alpha1_D_Lookup_Table_1[48] = 16'b0000010100110100;
  assign alpha1_D_Lookup_Table_1[49] = 16'b0000010100011010;
  assign alpha1_D_Lookup_Table_1[50] = 16'b0000010100000000;
  assign alpha1_D_Lookup_Table_1[51] = 16'b0000010011100111;
  assign alpha1_D_Lookup_Table_1[52] = 16'b0000010011010000;
  assign alpha1_D_Lookup_Table_1[53] = 16'b0000010010111001;
  assign alpha1_D_Lookup_Table_1[54] = 16'b0000010010100011;
  assign alpha1_D_Lookup_Table_1[55] = 16'b0000010010001110;
  assign alpha1_D_Lookup_Table_1[56] = 16'b0000010001111001;
  assign alpha1_D_Lookup_Table_1[57] = 16'b0000010001100110;
  assign alpha1_D_Lookup_Table_1[58] = 16'b0000010001010010;
  assign alpha1_D_Lookup_Table_1[59] = 16'b0000010001000000;
  assign alpha1_D_Lookup_Table_1[60] = 16'b0000010000101110;
  assign alpha1_D_Lookup_Table_1[61] = 16'b0000010000011101;
  assign alpha1_D_Lookup_Table_1[62] = 16'b0000010000001100;
  assign alpha1_D_Lookup_Table_1[63] = 16'b0000001111111100;
  assign alpha1_D_Lookup_Table_1[64] = 16'b0000001111101100;
  assign alpha1_D_Lookup_Table_1[65] = 16'b0000001111011101;
  assign alpha1_D_Lookup_Table_1[66] = 16'b0000001111001110;
  assign alpha1_D_Lookup_Table_1[67] = 16'b0000001111000000;
  assign alpha1_D_Lookup_Table_1[68] = 16'b0000001110110010;
  assign alpha1_D_Lookup_Table_1[69] = 16'b0000001110100101;
  assign alpha1_D_Lookup_Table_1[70] = 16'b0000001110010111;
  assign alpha1_D_Lookup_Table_1[71] = 16'b0000001110001011;
  assign alpha1_D_Lookup_Table_1[72] = 16'b0000001101111110;
  assign alpha1_D_Lookup_Table_1[73] = 16'b0000001101110010;
  assign alpha1_D_Lookup_Table_1[74] = 16'b0000001101100110;
  assign alpha1_D_Lookup_Table_1[75] = 16'b0000001101011011;
  assign alpha1_D_Lookup_Table_1[76] = 16'b0000001101010000;
  assign alpha1_D_Lookup_Table_1[77] = 16'b0000001101000101;
  assign alpha1_D_Lookup_Table_1[78] = 16'b0000001100111010;
  assign alpha1_D_Lookup_Table_1[79] = 16'b0000001100110000;
  assign alpha1_D_Lookup_Table_1[80] = 16'b0000001100100110;
  assign alpha1_D_Lookup_Table_1[81] = 16'b0000001100011100;
  assign alpha1_D_Lookup_Table_1[82] = 16'b0000001100010011;
  assign alpha1_D_Lookup_Table_1[83] = 16'b0000001100001001;
  assign alpha1_D_Lookup_Table_1[84] = 16'b0000001100000000;
  assign alpha1_D_Lookup_Table_1[85] = 16'b0000001011110111;
  assign alpha1_D_Lookup_Table_1[86] = 16'b0000001011101110;
  assign alpha1_D_Lookup_Table_1[87] = 16'b0000001011100110;
  assign alpha1_D_Lookup_Table_1[88] = 16'b0000001011011101;
  assign alpha1_D_Lookup_Table_1[89] = 16'b0000001011010101;
  assign alpha1_D_Lookup_Table_1[90] = 16'b0000001011001101;
  assign alpha1_D_Lookup_Table_1[91] = 16'b0000001011000110;
  assign alpha1_D_Lookup_Table_1[92] = 16'b0000001010111110;
  assign alpha1_D_Lookup_Table_1[93] = 16'b0000001010110110;
  assign alpha1_D_Lookup_Table_1[94] = 16'b0000001010101111;
  assign alpha1_D_Lookup_Table_1[95] = 16'b0000001010101000;
  assign alpha1_D_Lookup_Table_1[96] = 16'b0000001010100001;
  assign alpha1_D_Lookup_Table_1[97] = 16'b0000001010011010;
  assign alpha1_D_Lookup_Table_1[98] = 16'b0000001010010011;
  assign alpha1_D_Lookup_Table_1[99] = 16'b0000001010001101;
  assign alpha1_D_Lookup_Table_1[100] = 16'b0000001010000110;
  assign alpha1_D_Lookup_Table_1[101] = 16'b0000001010000000;
  assign alpha1_D_Lookup_Table_1[102] = 16'b0000001001111010;
  assign alpha1_D_Lookup_Table_1[103] = 16'b0000001001110100;
  assign alpha1_D_Lookup_Table_1[104] = 16'b0000001001101110;
  assign alpha1_D_Lookup_Table_1[105] = 16'b0000001001101000;
  assign alpha1_D_Lookup_Table_1[106] = 16'b0000001001100010;
  assign alpha1_D_Lookup_Table_1[107] = 16'b0000001001011100;
  assign alpha1_D_Lookup_Table_1[108] = 16'b0000001001010111;
  assign alpha1_D_Lookup_Table_1[109] = 16'b0000001001010001;
  assign alpha1_D_Lookup_Table_1[110] = 16'b0000001001001100;
  assign alpha1_D_Lookup_Table_1[111] = 16'b0000001001000111;
  assign alpha1_D_Lookup_Table_1[112] = 16'b0000001001000010;
  assign alpha1_D_Lookup_Table_1[113] = 16'b0000001000111101;
  assign alpha1_D_Lookup_Table_1[114] = 16'b0000001000111000;
  assign alpha1_D_Lookup_Table_1[115] = 16'b0000001000110011;
  assign alpha1_D_Lookup_Table_1[116] = 16'b0000001000101110;
  assign alpha1_D_Lookup_Table_1[117] = 16'b0000001000101001;
  assign alpha1_D_Lookup_Table_1[118] = 16'b0000001000100101;
  assign alpha1_D_Lookup_Table_1[119] = 16'b0000001000100000;
  assign alpha1_D_Lookup_Table_1[120] = 16'b0000001000011100;
  assign alpha1_D_Lookup_Table_1[121] = 16'b0000001000010111;
  assign alpha1_D_Lookup_Table_1[122] = 16'b0000001000010011;
  assign alpha1_D_Lookup_Table_1[123] = 16'b0000001000001110;
  assign alpha1_D_Lookup_Table_1[124] = 16'b0000001000001010;
  assign alpha1_D_Lookup_Table_1[125] = 16'b0000001000000110;
  assign alpha1_D_Lookup_Table_1[126] = 16'b0000001000000010;
  assign alpha1_D_Lookup_Table_1[127] = 16'b0000000111111110;
  assign alpha1_D_Lookup_Table_1[128] = 16'b0000000111111010;
  assign alpha1_D_Lookup_Table_1[129] = 16'b0000000111110110;
  assign alpha1_D_Lookup_Table_1[130] = 16'b0000000111110010;
  assign alpha1_D_Lookup_Table_1[131] = 16'b0000000111101111;
  assign alpha1_D_Lookup_Table_1[132] = 16'b0000000111101011;
  assign alpha1_D_Lookup_Table_1[133] = 16'b0000000111100111;
  assign alpha1_D_Lookup_Table_1[134] = 16'b0000000111100100;
  assign alpha1_D_Lookup_Table_1[135] = 16'b0000000111100000;
  assign alpha1_D_Lookup_Table_1[136] = 16'b0000000111011100;
  assign alpha1_D_Lookup_Table_1[137] = 16'b0000000111011001;
  assign alpha1_D_Lookup_Table_1[138] = 16'b0000000111010110;
  assign alpha1_D_Lookup_Table_1[139] = 16'b0000000111010010;
  assign alpha1_D_Lookup_Table_1[140] = 16'b0000000111001111;
  assign alpha1_D_Lookup_Table_1[141] = 16'b0000000111001100;
  assign alpha1_D_Lookup_Table_1[142] = 16'b0000000111001001;
  assign alpha1_D_Lookup_Table_1[143] = 16'b0000000111000101;
  assign alpha1_D_Lookup_Table_1[144] = 16'b0000000111000010;
  assign alpha1_D_Lookup_Table_1[145] = 16'b0000000110111111;
  assign alpha1_D_Lookup_Table_1[146] = 16'b0000000110111100;
  assign alpha1_D_Lookup_Table_1[147] = 16'b0000000110111001;
  assign alpha1_D_Lookup_Table_1[148] = 16'b0000000110110110;
  assign alpha1_D_Lookup_Table_1[149] = 16'b0000000110110011;
  assign alpha1_D_Lookup_Table_1[150] = 16'b0000000110110000;
  assign alpha1_D_Lookup_Table_1[151] = 16'b0000000110101101;
  assign alpha1_D_Lookup_Table_1[152] = 16'b0000000110101011;
  assign alpha1_D_Lookup_Table_1[153] = 16'b0000000110101000;
  assign alpha1_D_Lookup_Table_1[154] = 16'b0000000110100101;
  assign alpha1_D_Lookup_Table_1[155] = 16'b0000000110100010;
  assign alpha1_D_Lookup_Table_1[156] = 16'b0000000110100000;
  assign alpha1_D_Lookup_Table_1[157] = 16'b0000000110011101;
  assign alpha1_D_Lookup_Table_1[158] = 16'b0000000110011011;
  assign alpha1_D_Lookup_Table_1[159] = 16'b0000000110011000;
  assign alpha1_D_Lookup_Table_1[160] = 16'b0000000110010101;
  assign alpha1_D_Lookup_Table_1[161] = 16'b0000000110010011;
  assign alpha1_D_Lookup_Table_1[162] = 16'b0000000110010000;
  assign alpha1_D_Lookup_Table_1[163] = 16'b0000000110001110;
  assign alpha1_D_Lookup_Table_1[164] = 16'b0000000110001100;
  assign alpha1_D_Lookup_Table_1[165] = 16'b0000000110001001;
  assign alpha1_D_Lookup_Table_1[166] = 16'b0000000110000111;
  assign alpha1_D_Lookup_Table_1[167] = 16'b0000000110000101;
  assign alpha1_D_Lookup_Table_1[168] = 16'b0000000110000010;
  assign alpha1_D_Lookup_Table_1[169] = 16'b0000000110000000;
  assign alpha1_D_Lookup_Table_1[170] = 16'b0000000101111110;
  assign alpha1_D_Lookup_Table_1[171] = 16'b0000000101111100;
  assign alpha1_D_Lookup_Table_1[172] = 16'b0000000101111001;
  assign alpha1_D_Lookup_Table_1[173] = 16'b0000000101110111;
  assign alpha1_D_Lookup_Table_1[174] = 16'b0000000101110101;
  assign alpha1_D_Lookup_Table_1[175] = 16'b0000000101110011;
  assign alpha1_D_Lookup_Table_1[176] = 16'b0000000101110001;
  assign alpha1_D_Lookup_Table_1[177] = 16'b0000000101101111;
  assign alpha1_D_Lookup_Table_1[178] = 16'b0000000101101101;
  assign alpha1_D_Lookup_Table_1[179] = 16'b0000000101101011;
  assign alpha1_D_Lookup_Table_1[180] = 16'b0000000101101001;
  assign alpha1_D_Lookup_Table_1[181] = 16'b0000000101100111;
  assign alpha1_D_Lookup_Table_1[182] = 16'b0000000101100101;
  assign alpha1_D_Lookup_Table_1[183] = 16'b0000000101100011;
  assign alpha1_D_Lookup_Table_1[184] = 16'b0000000101100001;
  assign alpha1_D_Lookup_Table_1[185] = 16'b0000000101011111;
  assign alpha1_D_Lookup_Table_1[186] = 16'b0000000101011101;
  assign alpha1_D_Lookup_Table_1[187] = 16'b0000000101011011;
  assign alpha1_D_Lookup_Table_1[188] = 16'b0000000101011001;
  assign alpha1_D_Lookup_Table_1[189] = 16'b0000000101011000;
  assign alpha1_D_Lookup_Table_1[190] = 16'b0000000101010110;
  assign alpha1_D_Lookup_Table_1[191] = 16'b0000000101010100;
  assign alpha1_D_Lookup_Table_1[192] = 16'b0000000101010010;
  assign alpha1_D_Lookup_Table_1[193] = 16'b0000000101010000;
  assign alpha1_D_Lookup_Table_1[194] = 16'b0000000101001111;
  assign alpha1_D_Lookup_Table_1[195] = 16'b0000000101001101;
  assign alpha1_D_Lookup_Table_1[196] = 16'b0000000101001011;
  assign alpha1_D_Lookup_Table_1[197] = 16'b0000000101001010;
  assign alpha1_D_Lookup_Table_1[198] = 16'b0000000101001000;
  assign alpha1_D_Lookup_Table_1[199] = 16'b0000000101000110;
  assign alpha1_D_Lookup_Table_1[200] = 16'b0000000101000101;
  assign alpha1_D_Lookup_Table_1[201] = 16'b0000000101000011;
  assign alpha1_D_Lookup_Table_1[202] = 16'b0000000101000010;
  assign alpha1_D_Lookup_Table_1[203] = 16'b0000000101000000;
  assign alpha1_D_Lookup_Table_1[204] = 16'b0000000100111110;
  assign alpha1_D_Lookup_Table_1[205] = 16'b0000000100111101;
  assign alpha1_D_Lookup_Table_1[206] = 16'b0000000100111011;
  assign alpha1_D_Lookup_Table_1[207] = 16'b0000000100111010;
  assign alpha1_D_Lookup_Table_1[208] = 16'b0000000100111000;
  assign alpha1_D_Lookup_Table_1[209] = 16'b0000000100110111;
  assign alpha1_D_Lookup_Table_1[210] = 16'b0000000100110101;
  assign alpha1_D_Lookup_Table_1[211] = 16'b0000000100110100;
  assign alpha1_D_Lookup_Table_1[212] = 16'b0000000100110010;
  assign alpha1_D_Lookup_Table_1[213] = 16'b0000000100110001;
  assign alpha1_D_Lookup_Table_1[214] = 16'b0000000100110000;
  assign alpha1_D_Lookup_Table_1[215] = 16'b0000000100101110;
  assign alpha1_D_Lookup_Table_1[216] = 16'b0000000100101101;
  assign alpha1_D_Lookup_Table_1[217] = 16'b0000000100101011;
  assign alpha1_D_Lookup_Table_1[218] = 16'b0000000100101010;
  assign alpha1_D_Lookup_Table_1[219] = 16'b0000000100101001;
  assign alpha1_D_Lookup_Table_1[220] = 16'b0000000100100111;
  assign alpha1_D_Lookup_Table_1[221] = 16'b0000000100100110;
  assign alpha1_D_Lookup_Table_1[222] = 16'b0000000100100101;
  assign alpha1_D_Lookup_Table_1[223] = 16'b0000000100100011;
  assign alpha1_D_Lookup_Table_1[224] = 16'b0000000100100010;
  assign alpha1_D_Lookup_Table_1[225] = 16'b0000000100100001;
  assign alpha1_D_Lookup_Table_1[226] = 16'b0000000100100000;
  assign alpha1_D_Lookup_Table_1[227] = 16'b0000000100011110;
  assign alpha1_D_Lookup_Table_1[228] = 16'b0000000100011101;
  assign alpha1_D_Lookup_Table_1[229] = 16'b0000000100011100;
  assign alpha1_D_Lookup_Table_1[230] = 16'b0000000100011011;
  assign alpha1_D_Lookup_Table_1[231] = 16'b0000000100011001;
  assign alpha1_D_Lookup_Table_1[232] = 16'b0000000100011000;
  assign alpha1_D_Lookup_Table_1[233] = 16'b0000000100010111;
  assign alpha1_D_Lookup_Table_1[234] = 16'b0000000100010110;
  assign alpha1_D_Lookup_Table_1[235] = 16'b0000000100010101;
  assign alpha1_D_Lookup_Table_1[236] = 16'b0000000100010011;
  assign alpha1_D_Lookup_Table_1[237] = 16'b0000000100010010;
  assign alpha1_D_Lookup_Table_1[238] = 16'b0000000100010001;
  assign alpha1_D_Lookup_Table_1[239] = 16'b0000000100010000;
  assign alpha1_D_Lookup_Table_1[240] = 16'b0000000100001111;
  assign alpha1_D_Lookup_Table_1[241] = 16'b0000000100001110;
  assign alpha1_D_Lookup_Table_1[242] = 16'b0000000100001101;
  assign alpha1_D_Lookup_Table_1[243] = 16'b0000000100001100;
  assign alpha1_D_Lookup_Table_1[244] = 16'b0000000100001010;
  assign alpha1_D_Lookup_Table_1[245] = 16'b0000000100001001;
  assign alpha1_D_Lookup_Table_1[246] = 16'b0000000100001000;
  assign alpha1_D_Lookup_Table_1[247] = 16'b0000000100000111;
  assign alpha1_D_Lookup_Table_1[248] = 16'b0000000100000110;
  assign alpha1_D_Lookup_Table_1[249] = 16'b0000000100000101;
  assign alpha1_D_Lookup_Table_1[250] = 16'b0000000100000100;
  assign alpha1_D_Lookup_Table_1[251] = 16'b0000000100000011;
  assign alpha1_D_Lookup_Table_1[252] = 16'b0000000100000010;
  assign alpha1_D_Lookup_Table_1[253] = 16'b0000000100000001;
  assign alpha1_D_Lookup_Table_1[254] = 16'b0000000100000000;
  assign alpha1_D_Lookup_Table_k = (out2 <= 8'b00000001 ? 8'b00000000 :
              (out2 == 8'b11111111 ? 8'b11111110 :
              out2 - 8'b00000001));
  assign alpha1_D_Lookup_Table_out1 = alpha1_D_Lookup_Table_1[alpha1_D_Lookup_Table_k];



  always @(posedge clk)
    begin : PipelineRegister_process
      if (enb) begin
        alpha1_D_Lookup_Table_out1_1 <= alpha1_D_Lookup_Table_out1;
      end
    end



  assign Divide_out1 = out1_1 * alpha1_D_Lookup_Table_out1_1;



  assign Data_Type_Conversion_out1 = (Divide_out1[23:16] != 8'b00000000 ? 8'b11111111 :
              Divide_out1[15:8]);



  assign pixelOut_0 = Data_Type_Conversion_out1;

  assign pixelOut_1 = Data_Type_Conversion_out1;

  assign pixelOut_2 = Data_Type_Conversion_out1;

  assign ctrlOut_hStart = Color_Space_Converter_out2_hStart;

  assign ctrlOut_hEnd = Color_Space_Converter_out2_hEnd;

  assign ctrlOut_vStart = Color_Space_Converter_out2_vStart;

  assign ctrlOut_vEnd = Color_Space_Converter_out2_vEnd;

  assign ctrlOut_valid = Color_Space_Converter_out2_valid;

endmodule  // ContrastS_ip_src_ContrastStretching

